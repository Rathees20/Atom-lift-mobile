{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { globalStyles } from \"../styles/globalStyles\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MarkAttendanceScreen = function MarkAttendanceScreen(_ref) {\n  var onBack = _ref.onBack;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isSelfieTaken = _useState2[0],\n    setIsSelfieTaken = _useState2[1];\n  var handleTakeSelfie = function handleTakeSelfie() {\n    console.log('Take selfie pressed');\n    Alert.alert('Selfie Taken', 'Selfie has been captured successfully!', [{\n      text: 'OK',\n      onPress: function onPress() {\n        return setIsSelfieTaken(true);\n      }\n    }]);\n  };\n  var handleSubmit = function handleSubmit() {\n    if (!isSelfieTaken) {\n      Alert.alert('Selfie Required', 'Please take a selfie before submitting attendance.', [{\n        text: 'OK'\n      }]);\n      return;\n    }\n    console.log('Submit attendance pressed');\n    Alert.alert('Attendance Marked', 'Your attendance has been marked successfully!', [{\n      text: 'OK',\n      onPress: function onPress() {\n        setIsSelfieTaken(false);\n        onBack();\n      }\n    }]);\n  };\n  return _jsxs(SafeAreaView, {\n    style: globalStyles.markAttendanceContainer,\n    children: [_jsx(StatusBar, {\n      barStyle: \"light-content\",\n      backgroundColor: \"#3498db\"\n    }), _jsxs(View, {\n      style: globalStyles.markAttendanceHeader,\n      children: [_jsx(TouchableOpacity, {\n        onPress: onBack,\n        style: globalStyles.markAttendanceBackButton,\n        children: _jsx(Ionicons, {\n          name: \"arrow-back\",\n          size: 24,\n          color: \"#fff\"\n        })\n      }), _jsx(Text, {\n        style: globalStyles.markAttendanceTitle,\n        children: \"Mark attendance\"\n      }), _jsx(View, {\n        style: globalStyles.markAttendanceHeaderSpacer\n      })]\n    }), _jsxs(View, {\n      style: globalStyles.markAttendanceContent,\n      children: [_jsxs(View, {\n        style: globalStyles.markAttendanceCameraPreview,\n        children: [_jsx(Text, {\n          style: globalStyles.markAttendancePreviewText,\n          children: isSelfieTaken ? 'SELFIE CAPTURED' : 'NO PREVIEW AVAILABLE'\n        }), isSelfieTaken && _jsx(View, {\n          style: globalStyles.markAttendanceSuccessIcon,\n          children: _jsx(Ionicons, {\n            name: \"checkmark-circle\",\n            size: 48,\n            color: \"#27ae60\"\n          })\n        })]\n      }), _jsxs(View, {\n        style: globalStyles.markAttendanceButtons,\n        children: [_jsx(TouchableOpacity, {\n          style: [globalStyles.markAttendanceTakeSelfieButton, isSelfieTaken && globalStyles.markAttendanceButtonDisabled],\n          onPress: handleTakeSelfie,\n          disabled: isSelfieTaken,\n          children: _jsx(Text, {\n            style: globalStyles.markAttendanceButtonText,\n            children: isSelfieTaken ? 'Selfie Taken' : 'Take selfie'\n          })\n        }), _jsx(TouchableOpacity, {\n          style: [globalStyles.markAttendanceSubmitButton, !isSelfieTaken && globalStyles.markAttendanceButtonDisabled],\n          onPress: handleSubmit,\n          disabled: !isSelfieTaken,\n          children: _jsx(Text, {\n            style: globalStyles.markAttendanceButtonText,\n            children: \"Submit\"\n          })\n        })]\n      })]\n    })]\n  });\n};\nexport default MarkAttendanceScreen;","map":{"version":3,"names":["React","useState","View","Text","SafeAreaView","TouchableOpacity","StatusBar","Alert","Ionicons","globalStyles","jsx","_jsx","jsxs","_jsxs","MarkAttendanceScreen","_ref","onBack","_useState","_useState2","_slicedToArray","isSelfieTaken","setIsSelfieTaken","handleTakeSelfie","console","log","alert","text","onPress","handleSubmit","style","markAttendanceContainer","children","barStyle","backgroundColor","markAttendanceHeader","markAttendanceBackButton","name","size","color","markAttendanceTitle","markAttendanceHeaderSpacer","markAttendanceContent","markAttendanceCameraPreview","markAttendancePreviewText","markAttendanceSuccessIcon","markAttendanceButtons","markAttendanceTakeSelfieButton","markAttendanceButtonDisabled","disabled","markAttendanceButtonText","markAttendanceSubmitButton"],"sources":["D:/Download/Atom lift mobile app/src/screens/MarkAttendanceScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  StatusBar,\r\n  Alert,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { globalStyles } from '../styles/globalStyles';\r\n\r\ninterface MarkAttendanceScreenProps {\r\n  onBack: () => void;\r\n}\r\n\r\nconst MarkAttendanceScreen: React.FC<MarkAttendanceScreenProps> = ({ onBack }) => {\r\n  const [isSelfieTaken, setIsSelfieTaken] = useState<boolean>(false);\r\n\r\n  const handleTakeSelfie = (): void => {\r\n    console.log('Take selfie pressed');\r\n    // In a real app, this would open the camera\r\n    // For now, we'll simulate taking a selfie\r\n    Alert.alert(\r\n      'Selfie Taken',\r\n      'Selfie has been captured successfully!',\r\n      [\r\n        {\r\n          text: 'OK',\r\n          onPress: () => setIsSelfieTaken(true),\r\n        },\r\n      ]\r\n    );\r\n  };\r\n\r\n  const handleSubmit = (): void => {\r\n    if (!isSelfieTaken) {\r\n      Alert.alert(\r\n        'Selfie Required',\r\n        'Please take a selfie before submitting attendance.',\r\n        [{ text: 'OK' }]\r\n      );\r\n      return;\r\n    }\r\n\r\n    console.log('Submit attendance pressed');\r\n    Alert.alert(\r\n      'Attendance Marked',\r\n      'Your attendance has been marked successfully!',\r\n      [\r\n        {\r\n          text: 'OK',\r\n          onPress: () => {\r\n            setIsSelfieTaken(false);\r\n            onBack(); // Go back to home screen\r\n          },\r\n        },\r\n      ]\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={globalStyles.markAttendanceContainer}>\r\n      <StatusBar barStyle=\"light-content\" backgroundColor=\"#3498db\" />\r\n      \r\n      {/* Header */}\r\n      <View style={globalStyles.markAttendanceHeader}>\r\n        <TouchableOpacity onPress={onBack} style={globalStyles.markAttendanceBackButton}>\r\n          <Ionicons name=\"arrow-back\" size={24} color=\"#fff\" />\r\n        </TouchableOpacity>\r\n        <Text style={globalStyles.markAttendanceTitle}>Mark attendance</Text>\r\n        <View style={globalStyles.markAttendanceHeaderSpacer} />\r\n      </View>\r\n\r\n      {/* Main Content */}\r\n      <View style={globalStyles.markAttendanceContent}>\r\n        {/* Camera Preview Area */}\r\n        <View style={globalStyles.markAttendanceCameraPreview}>\r\n          <Text style={globalStyles.markAttendancePreviewText}>\r\n            {isSelfieTaken ? 'SELFIE CAPTURED' : 'NO PREVIEW AVAILABLE'}\r\n          </Text>\r\n          {isSelfieTaken && (\r\n            <View style={globalStyles.markAttendanceSuccessIcon}>\r\n              <Ionicons name=\"checkmark-circle\" size={48} color=\"#27ae60\" />\r\n            </View>\r\n          )}\r\n        </View>\r\n\r\n        {/* Action Buttons */}\r\n        <View style={globalStyles.markAttendanceButtons}>\r\n          <TouchableOpacity\r\n            style={[\r\n              globalStyles.markAttendanceTakeSelfieButton,\r\n              isSelfieTaken && globalStyles.markAttendanceButtonDisabled\r\n            ]}\r\n            onPress={handleTakeSelfie}\r\n            disabled={isSelfieTaken}\r\n          >\r\n            <Text style={globalStyles.markAttendanceButtonText}>\r\n              {isSelfieTaken ? 'Selfie Taken' : 'Take selfie'}\r\n            </Text>\r\n          </TouchableOpacity>\r\n          \r\n          <TouchableOpacity\r\n            style={[\r\n              globalStyles.markAttendanceSubmitButton,\r\n              !isSelfieTaken && globalStyles.markAttendanceButtonDisabled\r\n            ]}\r\n            onPress={handleSubmit}\r\n            disabled={!isSelfieTaken}\r\n          >\r\n            <Text style={globalStyles.markAttendanceButtonText}>Submit</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default MarkAttendanceScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,KAAA;AASxC,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,YAAY;AAAiC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAMtD,IAAMC,oBAAyD,GAAG,SAA5DA,oBAAyDA,CAAAC,IAAA,EAAmB;EAAA,IAAbC,MAAM,GAAAD,IAAA,CAANC,MAAM;EACzE,IAAAC,SAAA,GAA0ChB,QAAQ,CAAU,KAAK,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3DG,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EAEtC,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAe;IACnCC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAGlCjB,KAAK,CAACkB,KAAK,CACT,cAAc,EACd,wCAAwC,EACxC,CACE;MACEC,IAAI,EAAE,IAAI;MACVC,OAAO,EAAE,SAATA,OAAOA,CAAA;QAAA,OAAQN,gBAAgB,CAAC,IAAI,CAAC;MAAA;IACvC,CAAC,CAEL,CAAC;EACH,CAAC;EAED,IAAMO,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAe;IAC/B,IAAI,CAACR,aAAa,EAAE;MAClBb,KAAK,CAACkB,KAAK,CACT,iBAAiB,EACjB,oDAAoD,EACpD,CAAC;QAAEC,IAAI,EAAE;MAAK,CAAC,CACjB,CAAC;MACD;IACF;IAEAH,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IACxCjB,KAAK,CAACkB,KAAK,CACT,mBAAmB,EACnB,+CAA+C,EAC/C,CACE;MACEC,IAAI,EAAE,IAAI;MACVC,OAAO,EAAE,SAATA,OAAOA,CAAA,EAAQ;QACbN,gBAAgB,CAAC,KAAK,CAAC;QACvBL,MAAM,CAAC,CAAC;MACV;IACF,CAAC,CAEL,CAAC;EACH,CAAC;EAED,OACEH,KAAA,CAACT,YAAY;IAACyB,KAAK,EAAEpB,YAAY,CAACqB,uBAAwB;IAAAC,QAAA,GACxDpB,IAAA,CAACL,SAAS;MAAC0B,QAAQ,EAAC,eAAe;MAACC,eAAe,EAAC;IAAS,CAAE,CAAC,EAGhEpB,KAAA,CAACX,IAAI;MAAC2B,KAAK,EAAEpB,YAAY,CAACyB,oBAAqB;MAAAH,QAAA,GAC7CpB,IAAA,CAACN,gBAAgB;QAACsB,OAAO,EAAEX,MAAO;QAACa,KAAK,EAAEpB,YAAY,CAAC0B,wBAAyB;QAAAJ,QAAA,EAC9EpB,IAAA,CAACH,QAAQ;UAAC4B,IAAI,EAAC,YAAY;UAACC,IAAI,EAAE,EAAG;UAACC,KAAK,EAAC;QAAM,CAAE;MAAC,CACrC,CAAC,EACnB3B,IAAA,CAACR,IAAI;QAAC0B,KAAK,EAAEpB,YAAY,CAAC8B,mBAAoB;QAAAR,QAAA,EAAC;MAAe,CAAM,CAAC,EACrEpB,IAAA,CAACT,IAAI;QAAC2B,KAAK,EAAEpB,YAAY,CAAC+B;MAA2B,CAAE,CAAC;IAAA,CACpD,CAAC,EAGP3B,KAAA,CAACX,IAAI;MAAC2B,KAAK,EAAEpB,YAAY,CAACgC,qBAAsB;MAAAV,QAAA,GAE9ClB,KAAA,CAACX,IAAI;QAAC2B,KAAK,EAAEpB,YAAY,CAACiC,2BAA4B;QAAAX,QAAA,GACpDpB,IAAA,CAACR,IAAI;UAAC0B,KAAK,EAAEpB,YAAY,CAACkC,yBAA0B;UAAAZ,QAAA,EACjDX,aAAa,GAAG,iBAAiB,GAAG;QAAsB,CACvD,CAAC,EACNA,aAAa,IACZT,IAAA,CAACT,IAAI;UAAC2B,KAAK,EAAEpB,YAAY,CAACmC,yBAA0B;UAAAb,QAAA,EAClDpB,IAAA,CAACH,QAAQ;YAAC4B,IAAI,EAAC,kBAAkB;YAACC,IAAI,EAAE,EAAG;YAACC,KAAK,EAAC;UAAS,CAAE;QAAC,CAC1D,CACP;MAAA,CACG,CAAC,EAGPzB,KAAA,CAACX,IAAI;QAAC2B,KAAK,EAAEpB,YAAY,CAACoC,qBAAsB;QAAAd,QAAA,GAC9CpB,IAAA,CAACN,gBAAgB;UACfwB,KAAK,EAAE,CACLpB,YAAY,CAACqC,8BAA8B,EAC3C1B,aAAa,IAAIX,YAAY,CAACsC,4BAA4B,CAC1D;UACFpB,OAAO,EAAEL,gBAAiB;UAC1B0B,QAAQ,EAAE5B,aAAc;UAAAW,QAAA,EAExBpB,IAAA,CAACR,IAAI;YAAC0B,KAAK,EAAEpB,YAAY,CAACwC,wBAAyB;YAAAlB,QAAA,EAChDX,aAAa,GAAG,cAAc,GAAG;UAAa,CAC3C;QAAC,CACS,CAAC,EAEnBT,IAAA,CAACN,gBAAgB;UACfwB,KAAK,EAAE,CACLpB,YAAY,CAACyC,0BAA0B,EACvC,CAAC9B,aAAa,IAAIX,YAAY,CAACsC,4BAA4B,CAC3D;UACFpB,OAAO,EAAEC,YAAa;UACtBoB,QAAQ,EAAE,CAAC5B,aAAc;UAAAW,QAAA,EAEzBpB,IAAA,CAACR,IAAI;YAAC0B,KAAK,EAAEpB,YAAY,CAACwC,wBAAyB;YAAAlB,QAAA,EAAC;UAAM,CAAM;QAAC,CACjD,CAAC;MAAA,CACf,CAAC;IAAA,CACH,CAAC;EAAA,CACK,CAAC;AAEnB,CAAC;AAED,eAAejB,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}