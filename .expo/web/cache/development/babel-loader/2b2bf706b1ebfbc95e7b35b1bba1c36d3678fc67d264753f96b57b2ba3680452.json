{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { globalStyles } from \"../styles/globalStyles\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CreateAMCScreen = function CreateAMCScreen(_ref) {\n  var onBack = _ref.onBack,\n    onSave = _ref.onSave;\n  var _useState = useState({\n      selectedCustomer: '',\n      startDate: '',\n      endDate: '',\n      amcType: '',\n      numberOfServices: '',\n      paymentAmount: '',\n      paymentTerms: '',\n      notes: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    formData = _useState2[0],\n    setFormData = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showCustomerDropdown = _useState4[0],\n    setShowCustomerDropdown = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showAMCTypeDropdown = _useState6[0],\n    setShowAMCTypeDropdown = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showPaymentTermsDropdown = _useState8[0],\n    setShowPaymentTermsDropdown = _useState8[1];\n  var customers = ['Customer 1', 'Customer 2', 'Customer 3'];\n  var amcTypes = ['Annual', 'Semi-Annual', 'Quarterly', 'Monthly'];\n  var paymentTerms = ['Net 30', 'Net 60', 'Net 90', 'Cash on Delivery'];\n  var handleInputChange = function handleInputChange(field, value) {\n    setFormData(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, field, value));\n    });\n  };\n  var handleDateSelect = function handleDateSelect(field) {\n    Alert.alert('Select Date', `Please select ${field === 'startDate' ? 'start' : 'end'} date`, [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'OK',\n      onPress: function onPress() {\n        var mockDate = new Date().toLocaleDateString();\n        handleInputChange(field, mockDate);\n      }\n    }]);\n  };\n  var handleDropdownSelect = function handleDropdownSelect(field, value) {\n    handleInputChange(field, value);\n    if (field === 'selectedCustomer') setShowCustomerDropdown(false);\n    if (field === 'amcType') setShowAMCTypeDropdown(false);\n    if (field === 'paymentTerms') setShowPaymentTermsDropdown(false);\n  };\n  var handleSubmit = function handleSubmit() {\n    if (!formData.selectedCustomer.trim()) {\n      Alert.alert('Error', 'Please select a customer');\n      return;\n    }\n    if (!formData.startDate.trim()) {\n      Alert.alert('Error', 'Please select start date');\n      return;\n    }\n    if (!formData.endDate.trim()) {\n      Alert.alert('Error', 'Please select end date');\n      return;\n    }\n    if (!formData.amcType.trim()) {\n      Alert.alert('Error', 'Please select AMC type');\n      return;\n    }\n    if (!formData.numberOfServices.trim()) {\n      Alert.alert('Error', 'Please enter number of services');\n      return;\n    }\n    if (!formData.paymentAmount.trim()) {\n      Alert.alert('Error', 'Please enter payment amount');\n      return;\n    }\n    if (!formData.paymentTerms.trim()) {\n      Alert.alert('Error', 'Please select payment terms');\n      return;\n    }\n    if (isNaN(Number(formData.numberOfServices)) || Number(formData.numberOfServices) <= 0) {\n      Alert.alert('Error', 'Please enter a valid number of services');\n      return;\n    }\n    if (isNaN(Number(formData.paymentAmount)) || Number(formData.paymentAmount) <= 0) {\n      Alert.alert('Error', 'Please enter a valid payment amount');\n      return;\n    }\n    onSave(formData);\n  };\n  return _jsxs(SafeAreaView, {\n    style: globalStyles.amcContainer,\n    children: [_jsx(StatusBar, {\n      barStyle: \"light-content\",\n      backgroundColor: \"#3498db\"\n    }), _jsxs(View, {\n      style: globalStyles.amcHeader,\n      children: [_jsx(TouchableOpacity, {\n        onPress: onBack,\n        style: globalStyles.amcBackButton,\n        children: _jsx(Ionicons, {\n          name: \"arrow-back\",\n          size: 24,\n          color: \"#fff\"\n        })\n      }), _jsx(Text, {\n        style: globalStyles.amcTitle,\n        children: \"Create AMC\"\n      }), _jsx(View, {\n        style: {\n          width: 24\n        }\n      })]\n    }), _jsxs(ScrollView, {\n      style: globalStyles.amcContent,\n      showsVerticalScrollIndicator: false,\n      children: [_jsxs(View, {\n        style: globalStyles.amcFieldContainer,\n        children: [_jsxs(TouchableOpacity, {\n          style: globalStyles.amcDropdownContainer,\n          onPress: function onPress() {\n            return setShowCustomerDropdown(!showCustomerDropdown);\n          },\n          children: [_jsx(Text, {\n            style: [globalStyles.amcDropdownText, !formData.selectedCustomer && globalStyles.amcPlaceholderText],\n            children: formData.selectedCustomer || 'Select Customer'\n          }), _jsx(Ionicons, {\n            name: \"chevron-down\",\n            size: 20,\n            color: \"#666\"\n          })]\n        }), showCustomerDropdown && _jsx(View, {\n          style: globalStyles.amcDropdownList,\n          children: customers.map(function (customer, index) {\n            return _jsx(TouchableOpacity, {\n              style: globalStyles.amcDropdownItem,\n              onPress: function onPress() {\n                return handleDropdownSelect('selectedCustomer', customer);\n              },\n              children: _jsx(Text, {\n                style: globalStyles.amcDropdownItemText,\n                children: customer\n              })\n            }, index);\n          })\n        })]\n      }), _jsxs(View, {\n        style: globalStyles.amcFieldContainer,\n        children: [_jsx(Text, {\n          style: globalStyles.amcSectionLabel,\n          children: \"Select Start & End Date\"\n        }), _jsxs(View, {\n          style: globalStyles.amcDateRow,\n          children: [_jsx(TouchableOpacity, {\n            style: globalStyles.amcDateButton,\n            onPress: function onPress() {\n              return handleDateSelect('startDate');\n            },\n            children: _jsx(Text, {\n              style: globalStyles.amcDateButtonText,\n              children: formData.startDate || 'Start Date:'\n            })\n          }), _jsx(TouchableOpacity, {\n            style: globalStyles.amcDateButton,\n            onPress: function onPress() {\n              return handleDateSelect('endDate');\n            },\n            children: _jsx(Text, {\n              style: globalStyles.amcDateButtonText,\n              children: formData.endDate || 'End Date:'\n            })\n          })]\n        })]\n      }), _jsxs(View, {\n        style: globalStyles.amcFieldContainer,\n        children: [_jsxs(TouchableOpacity, {\n          style: globalStyles.amcDropdownContainer,\n          onPress: function onPress() {\n            return setShowAMCTypeDropdown(!showAMCTypeDropdown);\n          },\n          children: [_jsx(Text, {\n            style: [globalStyles.amcDropdownText, !formData.amcType && globalStyles.amcPlaceholderText],\n            children: formData.amcType || 'Select Amc Type'\n          }), _jsx(Ionicons, {\n            name: \"chevron-down\",\n            size: 20,\n            color: \"#666\"\n          })]\n        }), showAMCTypeDropdown && _jsx(View, {\n          style: globalStyles.amcDropdownList,\n          children: amcTypes.map(function (type, index) {\n            return _jsx(TouchableOpacity, {\n              style: globalStyles.amcDropdownItem,\n              onPress: function onPress() {\n                return handleDropdownSelect('amcType', type);\n              },\n              children: _jsx(Text, {\n                style: globalStyles.amcDropdownItemText,\n                children: type\n              })\n            }, index);\n          })\n        })]\n      }), _jsxs(View, {\n        style: globalStyles.amcFieldContainer,\n        children: [_jsx(Text, {\n          style: globalStyles.amcLabel,\n          children: \"Enter No. of service\"\n        }), _jsx(TextInput, {\n          style: globalStyles.amcUnderlineInput,\n          value: formData.numberOfServices,\n          onChangeText: function onChangeText(value) {\n            return handleInputChange('numberOfServices', value);\n          },\n          keyboardType: \"numeric\",\n          placeholder: \"Enter number of services\",\n          placeholderTextColor: \"#999\"\n        })]\n      }), _jsxs(View, {\n        style: globalStyles.amcFieldContainer,\n        children: [_jsx(Text, {\n          style: globalStyles.amcLabel,\n          children: \"Enter payment amount (Without TAX)\"\n        }), _jsx(TextInput, {\n          style: globalStyles.amcUnderlineInput,\n          value: formData.paymentAmount,\n          onChangeText: function onChangeText(value) {\n            return handleInputChange('paymentAmount', value);\n          },\n          keyboardType: \"numeric\",\n          placeholder: \"Enter payment amount\",\n          placeholderTextColor: \"#999\"\n        })]\n      }), _jsxs(View, {\n        style: globalStyles.amcFieldContainer,\n        children: [_jsxs(TouchableOpacity, {\n          style: globalStyles.amcDropdownContainer,\n          onPress: function onPress() {\n            return setShowPaymentTermsDropdown(!showPaymentTermsDropdown);\n          },\n          children: [_jsx(Text, {\n            style: [globalStyles.amcDropdownText, !formData.paymentTerms && globalStyles.amcPlaceholderText],\n            children: formData.paymentTerms || 'Select Payment Terms'\n          }), _jsx(Ionicons, {\n            name: \"chevron-down\",\n            size: 20,\n            color: \"#666\"\n          })]\n        }), showPaymentTermsDropdown && _jsx(View, {\n          style: globalStyles.amcDropdownList,\n          children: paymentTerms.map(function (term, index) {\n            return _jsx(TouchableOpacity, {\n              style: globalStyles.amcDropdownItem,\n              onPress: function onPress() {\n                return handleDropdownSelect('paymentTerms', term);\n              },\n              children: _jsx(Text, {\n                style: globalStyles.amcDropdownItemText,\n                children: term\n              })\n            }, index);\n          })\n        })]\n      }), _jsxs(View, {\n        style: globalStyles.amcFieldContainer,\n        children: [_jsx(Text, {\n          style: globalStyles.amcLabel,\n          children: \"Notes\"\n        }), _jsx(TextInput, {\n          style: [globalStyles.amcUnderlineInput, globalStyles.amcNotesInput],\n          value: formData.notes,\n          onChangeText: function onChangeText(value) {\n            return handleInputChange('notes', value);\n          },\n          multiline: true,\n          numberOfLines: 4,\n          textAlignVertical: \"top\",\n          placeholder: \"Enter notes (optional)\",\n          placeholderTextColor: \"#999\"\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: globalStyles.amcSubmitButton,\n        onPress: handleSubmit,\n        children: _jsx(Text, {\n          style: globalStyles.amcSubmitButtonText,\n          children: \"Submit\"\n        })\n      })]\n    })]\n  });\n};\nexport default CreateAMCScreen;","map":{"version":3,"names":["React","useState","View","Text","SafeAreaView","TouchableOpacity","TextInput","StatusBar","Alert","ScrollView","Ionicons","globalStyles","jsx","_jsx","jsxs","_jsxs","CreateAMCScreen","_ref","onBack","onSave","_useState","selectedCustomer","startDate","endDate","amcType","numberOfServices","paymentAmount","paymentTerms","notes","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","showCustomerDropdown","setShowCustomerDropdown","_useState5","_useState6","showAMCTypeDropdown","setShowAMCTypeDropdown","_useState7","_useState8","showPaymentTermsDropdown","setShowPaymentTermsDropdown","customers","amcTypes","handleInputChange","field","value","prev","_objectSpread","_defineProperty","handleDateSelect","alert","text","style","onPress","mockDate","Date","toLocaleDateString","handleDropdownSelect","handleSubmit","trim","isNaN","Number","amcContainer","children","barStyle","backgroundColor","amcHeader","amcBackButton","name","size","color","amcTitle","width","amcContent","showsVerticalScrollIndicator","amcFieldContainer","amcDropdownContainer","amcDropdownText","amcPlaceholderText","amcDropdownList","map","customer","index","amcDropdownItem","amcDropdownItemText","amcSectionLabel","amcDateRow","amcDateButton","amcDateButtonText","type","amcLabel","amcUnderlineInput","onChangeText","keyboardType","placeholder","placeholderTextColor","term","amcNotesInput","multiline","numberOfLines","textAlignVertical","amcSubmitButton","amcSubmitButtonText"],"sources":["D:/Download/Atom lift mobile app/src/screens/CreateAMCScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  StatusBar,\r\n  Alert,\r\n  ScrollView,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { globalStyles } from '../styles/globalStyles';\r\nimport { CreateAMCFormData } from '../../types';\r\n\r\ninterface CreateAMCScreenProps {\r\n  onBack: () => void;\r\n  onSave: (data: CreateAMCFormData) => void;\r\n}\r\n\r\nconst CreateAMCScreen: React.FC<CreateAMCScreenProps> = ({ onBack, onSave }) => {\r\n  const [formData, setFormData] = useState<CreateAMCFormData>({\r\n    selectedCustomer: '',\r\n    startDate: '',\r\n    endDate: '',\r\n    amcType: '',\r\n    numberOfServices: '',\r\n    paymentAmount: '',\r\n    paymentTerms: '',\r\n    notes: '',\r\n  });\r\n\r\n  const [showCustomerDropdown, setShowCustomerDropdown] = useState<boolean>(false);\r\n  const [showAMCTypeDropdown, setShowAMCTypeDropdown] = useState<boolean>(false);\r\n  const [showPaymentTermsDropdown, setShowPaymentTermsDropdown] = useState<boolean>(false);\r\n\r\n  // Mock data for dropdowns\r\n  const customers = ['Customer 1', 'Customer 2', 'Customer 3'];\r\n  const amcTypes = ['Annual', 'Semi-Annual', 'Quarterly', 'Monthly'];\r\n  const paymentTerms = ['Net 30', 'Net 60', 'Net 90', 'Cash on Delivery'];\r\n\r\n  const handleInputChange = (field: keyof CreateAMCFormData, value: string): void => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value,\r\n    }));\r\n  };\r\n\r\n  const handleDateSelect = (field: 'startDate' | 'endDate'): void => {\r\n    // In a real app, you would open a date picker here\r\n    // For now, we'll just show an alert\r\n    Alert.alert(\r\n      'Select Date',\r\n      `Please select ${field === 'startDate' ? 'start' : 'end'} date`,\r\n      [\r\n        { text: 'Cancel', style: 'cancel' },\r\n        { \r\n          text: 'OK', \r\n          onPress: () => {\r\n            // Mock date selection\r\n            const mockDate = new Date().toLocaleDateString();\r\n            handleInputChange(field, mockDate);\r\n          }\r\n        }\r\n      ]\r\n    );\r\n  };\r\n\r\n  const handleDropdownSelect = (field: keyof CreateAMCFormData, value: string): void => {\r\n    handleInputChange(field, value);\r\n    if (field === 'selectedCustomer') setShowCustomerDropdown(false);\r\n    if (field === 'amcType') setShowAMCTypeDropdown(false);\r\n    if (field === 'paymentTerms') setShowPaymentTermsDropdown(false);\r\n  };\r\n\r\n  const handleSubmit = (): void => {\r\n    // Basic validation\r\n    if (!formData.selectedCustomer.trim()) {\r\n      Alert.alert('Error', 'Please select a customer');\r\n      return;\r\n    }\r\n    if (!formData.startDate.trim()) {\r\n      Alert.alert('Error', 'Please select start date');\r\n      return;\r\n    }\r\n    if (!formData.endDate.trim()) {\r\n      Alert.alert('Error', 'Please select end date');\r\n      return;\r\n    }\r\n    if (!formData.amcType.trim()) {\r\n      Alert.alert('Error', 'Please select AMC type');\r\n      return;\r\n    }\r\n    if (!formData.numberOfServices.trim()) {\r\n      Alert.alert('Error', 'Please enter number of services');\r\n      return;\r\n    }\r\n    if (!formData.paymentAmount.trim()) {\r\n      Alert.alert('Error', 'Please enter payment amount');\r\n      return;\r\n    }\r\n    if (!formData.paymentTerms.trim()) {\r\n      Alert.alert('Error', 'Please select payment terms');\r\n      return;\r\n    }\r\n\r\n    // Number validation\r\n    if (isNaN(Number(formData.numberOfServices)) || Number(formData.numberOfServices) <= 0) {\r\n      Alert.alert('Error', 'Please enter a valid number of services');\r\n      return;\r\n    }\r\n    if (isNaN(Number(formData.paymentAmount)) || Number(formData.paymentAmount) <= 0) {\r\n      Alert.alert('Error', 'Please enter a valid payment amount');\r\n      return;\r\n    }\r\n\r\n    onSave(formData);\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={globalStyles.amcContainer}>\r\n      <StatusBar barStyle=\"light-content\" backgroundColor=\"#3498db\" />\r\n      \r\n      {/* Header */}\r\n      <View style={globalStyles.amcHeader}>\r\n        <TouchableOpacity onPress={onBack} style={globalStyles.amcBackButton}>\r\n          <Ionicons name=\"arrow-back\" size={24} color=\"#fff\" />\r\n        </TouchableOpacity>\r\n        <Text style={globalStyles.amcTitle}>Create AMC</Text>\r\n        <View style={{ width: 24 }} />\r\n      </View>\r\n\r\n      {/* Form Content */}\r\n      <ScrollView style={globalStyles.amcContent} showsVerticalScrollIndicator={false}>\r\n        {/* Select Customer */}\r\n        <View style={globalStyles.amcFieldContainer}>\r\n          <TouchableOpacity \r\n            style={globalStyles.amcDropdownContainer}\r\n            onPress={() => setShowCustomerDropdown(!showCustomerDropdown)}\r\n          >\r\n            <Text style={[globalStyles.amcDropdownText, !formData.selectedCustomer && globalStyles.amcPlaceholderText]}>\r\n              {formData.selectedCustomer || 'Select Customer'}\r\n            </Text>\r\n            <Ionicons name=\"chevron-down\" size={20} color=\"#666\" />\r\n          </TouchableOpacity>\r\n          \r\n          {showCustomerDropdown && (\r\n            <View style={globalStyles.amcDropdownList}>\r\n              {customers.map((customer, index) => (\r\n                <TouchableOpacity\r\n                  key={index}\r\n                  style={globalStyles.amcDropdownItem}\r\n                  onPress={() => handleDropdownSelect('selectedCustomer', customer)}\r\n                >\r\n                  <Text style={globalStyles.amcDropdownItemText}>{customer}</Text>\r\n                </TouchableOpacity>\r\n              ))}\r\n            </View>\r\n          )}\r\n        </View>\r\n\r\n        {/* Select Start & End Date */}\r\n        <View style={globalStyles.amcFieldContainer}>\r\n          <Text style={globalStyles.amcSectionLabel}>Select Start & End Date</Text>\r\n          <View style={globalStyles.amcDateRow}>\r\n            <TouchableOpacity \r\n              style={globalStyles.amcDateButton}\r\n              onPress={() => handleDateSelect('startDate')}\r\n            >\r\n              <Text style={globalStyles.amcDateButtonText}>\r\n                {formData.startDate || 'Start Date:'}\r\n              </Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity \r\n              style={globalStyles.amcDateButton}\r\n              onPress={() => handleDateSelect('endDate')}\r\n            >\r\n              <Text style={globalStyles.amcDateButtonText}>\r\n                {formData.endDate || 'End Date:'}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n\r\n        {/* Select AMC Type */}\r\n        <View style={globalStyles.amcFieldContainer}>\r\n          <TouchableOpacity \r\n            style={globalStyles.amcDropdownContainer}\r\n            onPress={() => setShowAMCTypeDropdown(!showAMCTypeDropdown)}\r\n          >\r\n            <Text style={[globalStyles.amcDropdownText, !formData.amcType && globalStyles.amcPlaceholderText]}>\r\n              {formData.amcType || 'Select Amc Type'}\r\n            </Text>\r\n            <Ionicons name=\"chevron-down\" size={20} color=\"#666\" />\r\n          </TouchableOpacity>\r\n          \r\n          {showAMCTypeDropdown && (\r\n            <View style={globalStyles.amcDropdownList}>\r\n              {amcTypes.map((type, index) => (\r\n                <TouchableOpacity\r\n                  key={index}\r\n                  style={globalStyles.amcDropdownItem}\r\n                  onPress={() => handleDropdownSelect('amcType', type)}\r\n                >\r\n                  <Text style={globalStyles.amcDropdownItemText}>{type}</Text>\r\n                </TouchableOpacity>\r\n              ))}\r\n            </View>\r\n          )}\r\n        </View>\r\n\r\n        {/* Enter No. of service */}\r\n        <View style={globalStyles.amcFieldContainer}>\r\n          <Text style={globalStyles.amcLabel}>Enter No. of service</Text>\r\n          <TextInput\r\n            style={globalStyles.amcUnderlineInput}\r\n            value={formData.numberOfServices}\r\n            onChangeText={(value) => handleInputChange('numberOfServices', value)}\r\n            keyboardType=\"numeric\"\r\n            placeholder=\"Enter number of services\"\r\n            placeholderTextColor=\"#999\"\r\n          />\r\n        </View>\r\n\r\n        {/* Enter payment amount */}\r\n        <View style={globalStyles.amcFieldContainer}>\r\n          <Text style={globalStyles.amcLabel}>Enter payment amount (Without TAX)</Text>\r\n          <TextInput\r\n            style={globalStyles.amcUnderlineInput}\r\n            value={formData.paymentAmount}\r\n            onChangeText={(value) => handleInputChange('paymentAmount', value)}\r\n            keyboardType=\"numeric\"\r\n            placeholder=\"Enter payment amount\"\r\n            placeholderTextColor=\"#999\"\r\n          />\r\n        </View>\r\n\r\n        {/* Select Payment Terms */}\r\n        <View style={globalStyles.amcFieldContainer}>\r\n          <TouchableOpacity \r\n            style={globalStyles.amcDropdownContainer}\r\n            onPress={() => setShowPaymentTermsDropdown(!showPaymentTermsDropdown)}\r\n          >\r\n            <Text style={[globalStyles.amcDropdownText, !formData.paymentTerms && globalStyles.amcPlaceholderText]}>\r\n              {formData.paymentTerms || 'Select Payment Terms'}\r\n            </Text>\r\n            <Ionicons name=\"chevron-down\" size={20} color=\"#666\" />\r\n          </TouchableOpacity>\r\n          \r\n          {showPaymentTermsDropdown && (\r\n            <View style={globalStyles.amcDropdownList}>\r\n              {paymentTerms.map((term, index) => (\r\n                <TouchableOpacity\r\n                  key={index}\r\n                  style={globalStyles.amcDropdownItem}\r\n                  onPress={() => handleDropdownSelect('paymentTerms', term)}\r\n                >\r\n                  <Text style={globalStyles.amcDropdownItemText}>{term}</Text>\r\n                </TouchableOpacity>\r\n              ))}\r\n            </View>\r\n          )}\r\n        </View>\r\n\r\n        {/* Notes */}\r\n        <View style={globalStyles.amcFieldContainer}>\r\n          <Text style={globalStyles.amcLabel}>Notes</Text>\r\n          <TextInput\r\n            style={[globalStyles.amcUnderlineInput, globalStyles.amcNotesInput]}\r\n            value={formData.notes}\r\n            onChangeText={(value) => handleInputChange('notes', value)}\r\n            multiline\r\n            numberOfLines={4}\r\n            textAlignVertical=\"top\"\r\n            placeholder=\"Enter notes (optional)\"\r\n            placeholderTextColor=\"#999\"\r\n          />\r\n        </View>\r\n\r\n        <TouchableOpacity style={globalStyles.amcSubmitButton} onPress={handleSubmit}>\r\n          <Text style={globalStyles.amcSubmitButtonText}>Submit</Text>\r\n        </TouchableOpacity>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default CreateAMCScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}