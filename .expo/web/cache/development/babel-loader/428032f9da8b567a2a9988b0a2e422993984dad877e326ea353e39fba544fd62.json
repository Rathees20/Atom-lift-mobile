{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { globalStyles } from \"../styles/globalStyles\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddCustomerScreen = function AddCustomerScreen(_ref) {\n  var onBack = _ref.onBack,\n    onSave = _ref.onSave;\n  var _useState = useState({\n      customerSiteName: '',\n      mobileNumber: '',\n      email: '',\n      customerSiteAddress: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    formData = _useState2[0],\n    setFormData = _useState2[1];\n  var handleInputChange = function handleInputChange(field, value) {\n    setFormData(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, field, value));\n    });\n  };\n  var handleSubmit = function handleSubmit() {\n    if (!formData.customerSiteName.trim()) {\n      Alert.alert('Error', 'Please enter customer site name');\n      return;\n    }\n    if (!formData.mobileNumber.trim()) {\n      Alert.alert('Error', 'Please enter mobile number');\n      return;\n    }\n    if (!formData.email.trim()) {\n      Alert.alert('Error', 'Please enter email');\n      return;\n    }\n    if (!formData.customerSiteAddress.trim()) {\n      Alert.alert('Error', 'Please enter customer site address');\n      return;\n    }\n    var emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(formData.email)) {\n      Alert.alert('Error', 'Please enter a valid email address');\n      return;\n    }\n    var mobileRegex = /^[0-9]{10}$/;\n    if (!mobileRegex.test(formData.mobileNumber.replace(/\\D/g, ''))) {\n      Alert.alert('Error', 'Please enter a valid 10-digit mobile number');\n      return;\n    }\n    onSave(formData);\n  };\n  return _jsxs(SafeAreaView, {\n    style: globalStyles.customerContainer,\n    children: [_jsx(StatusBar, {\n      barStyle: \"light-content\",\n      backgroundColor: \"#3498db\"\n    }), _jsxs(View, {\n      style: globalStyles.customerHeader,\n      children: [_jsx(TouchableOpacity, {\n        onPress: onBack,\n        style: globalStyles.customerBackButton,\n        children: _jsx(Ionicons, {\n          name: \"arrow-back\",\n          size: 24,\n          color: \"#fff\"\n        })\n      }), _jsx(Text, {\n        style: globalStyles.customerTitle,\n        children: \"Add Customer\"\n      }), _jsx(View, {\n        style: {\n          width: 24\n        }\n      })]\n    }), _jsxs(View, {\n      style: globalStyles.customerContent,\n      children: [_jsx(View, {\n        style: globalStyles.customerFieldContainer,\n        children: _jsx(TextInput, {\n          style: globalStyles.customerInput,\n          placeholder: \"Customer Site Name\",\n          value: formData.customerSiteName,\n          onChangeText: function onChangeText(value) {\n            return handleInputChange('customerSiteName', value);\n          },\n          placeholderTextColor: \"#999\"\n        })\n      }), _jsx(View, {\n        style: globalStyles.customerFieldContainer,\n        children: _jsx(TextInput, {\n          style: globalStyles.customerInput,\n          placeholder: \"Mobile Number\",\n          value: formData.mobileNumber,\n          onChangeText: function onChangeText(value) {\n            return handleInputChange('mobileNumber', value);\n          },\n          keyboardType: \"phone-pad\",\n          placeholderTextColor: \"#999\"\n        })\n      }), _jsx(View, {\n        style: globalStyles.customerFieldContainer,\n        children: _jsx(TextInput, {\n          style: globalStyles.customerInput,\n          placeholder: \"Email\",\n          value: formData.email,\n          onChangeText: function onChangeText(value) {\n            return handleInputChange('email', value);\n          },\n          keyboardType: \"email-address\",\n          autoCapitalize: \"none\",\n          placeholderTextColor: \"#999\"\n        })\n      }), _jsx(View, {\n        style: globalStyles.customerFieldContainer,\n        children: _jsx(TextInput, {\n          style: [globalStyles.customerInput, globalStyles.customerTextArea],\n          placeholder: \"Customer Site Address\",\n          value: formData.customerSiteAddress,\n          onChangeText: function onChangeText(value) {\n            return handleInputChange('customerSiteAddress', value);\n          },\n          multiline: true,\n          numberOfLines: 4,\n          textAlignVertical: \"top\",\n          placeholderTextColor: \"#999\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: globalStyles.customerSubmitButton,\n        onPress: handleSubmit,\n        children: _jsx(Text, {\n          style: globalStyles.customerSubmitButtonText,\n          children: \"Submit\"\n        })\n      })]\n    })]\n  });\n};\nexport default AddCustomerScreen;","map":{"version":3,"names":["React","useState","View","Text","SafeAreaView","TouchableOpacity","TextInput","StatusBar","Alert","Ionicons","globalStyles","jsx","_jsx","jsxs","_jsxs","AddCustomerScreen","_ref","onBack","onSave","_useState","customerSiteName","mobileNumber","email","customerSiteAddress","_useState2","_slicedToArray","formData","setFormData","handleInputChange","field","value","prev","_objectSpread","_defineProperty","handleSubmit","trim","alert","emailRegex","test","mobileRegex","replace","style","customerContainer","children","barStyle","backgroundColor","customerHeader","onPress","customerBackButton","name","size","color","customerTitle","width","customerContent","customerFieldContainer","customerInput","placeholder","onChangeText","placeholderTextColor","keyboardType","autoCapitalize","customerTextArea","multiline","numberOfLines","textAlignVertical","customerSubmitButton","customerSubmitButtonText"],"sources":["D:/Download/Atom lift mobile app/src/screens/AddCustomerScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  StatusBar,\r\n  Alert,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { globalStyles } from '../styles/globalStyles';\r\nimport { AddCustomerFormData } from '../../types';\r\n\r\ninterface AddCustomerScreenProps {\r\n  onBack: () => void;\r\n  onSave: (data: AddCustomerFormData) => void;\r\n}\r\n\r\nconst AddCustomerScreen: React.FC<AddCustomerScreenProps> = ({ onBack, onSave }) => {\r\n  const [formData, setFormData] = useState<AddCustomerFormData>({\r\n    customerSiteName: '',\r\n    mobileNumber: '',\r\n    email: '',\r\n    customerSiteAddress: '',\r\n  });\r\n\r\n  const handleInputChange = (field: keyof AddCustomerFormData, value: string): void => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (): void => {\r\n    // Basic validation\r\n    if (!formData.customerSiteName.trim()) {\r\n      Alert.alert('Error', 'Please enter customer site name');\r\n      return;\r\n    }\r\n    if (!formData.mobileNumber.trim()) {\r\n      Alert.alert('Error', 'Please enter mobile number');\r\n      return;\r\n    }\r\n    if (!formData.email.trim()) {\r\n      Alert.alert('Error', 'Please enter email');\r\n      return;\r\n    }\r\n    if (!formData.customerSiteAddress.trim()) {\r\n      Alert.alert('Error', 'Please enter customer site address');\r\n      return;\r\n    }\r\n\r\n    // Email validation\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(formData.email)) {\r\n      Alert.alert('Error', 'Please enter a valid email address');\r\n      return;\r\n    }\r\n\r\n    // Mobile number validation (basic)\r\n    const mobileRegex = /^[0-9]{10}$/;\r\n    if (!mobileRegex.test(formData.mobileNumber.replace(/\\D/g, ''))) {\r\n      Alert.alert('Error', 'Please enter a valid 10-digit mobile number');\r\n      return;\r\n    }\r\n\r\n    onSave(formData);\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={globalStyles.customerContainer}>\r\n      <StatusBar barStyle=\"light-content\" backgroundColor=\"#3498db\" />\r\n      \r\n      {/* Header */}\r\n      <View style={globalStyles.customerHeader}>\r\n        <TouchableOpacity onPress={onBack} style={globalStyles.customerBackButton}>\r\n          <Ionicons name=\"arrow-back\" size={24} color=\"#fff\" />\r\n        </TouchableOpacity>\r\n        <Text style={globalStyles.customerTitle}>Add Customer</Text>\r\n        <View style={{ width: 24 }} />\r\n      </View>\r\n\r\n      {/* Form Content */}\r\n      <View style={globalStyles.customerContent}>\r\n        <View style={globalStyles.customerFieldContainer}>\r\n          <TextInput\r\n            style={globalStyles.customerInput}\r\n            placeholder=\"Customer Site Name\"\r\n            value={formData.customerSiteName}\r\n            onChangeText={(value) => handleInputChange('customerSiteName', value)}\r\n            placeholderTextColor=\"#999\"\r\n          />\r\n        </View>\r\n\r\n        <View style={globalStyles.customerFieldContainer}>\r\n          <TextInput\r\n            style={globalStyles.customerInput}\r\n            placeholder=\"Mobile Number\"\r\n            value={formData.mobileNumber}\r\n            onChangeText={(value) => handleInputChange('mobileNumber', value)}\r\n            keyboardType=\"phone-pad\"\r\n            placeholderTextColor=\"#999\"\r\n          />\r\n        </View>\r\n\r\n        <View style={globalStyles.customerFieldContainer}>\r\n          <TextInput\r\n            style={globalStyles.customerInput}\r\n            placeholder=\"Email\"\r\n            value={formData.email}\r\n            onChangeText={(value) => handleInputChange('email', value)}\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n            placeholderTextColor=\"#999\"\r\n          />\r\n        </View>\r\n\r\n        <View style={globalStyles.customerFieldContainer}>\r\n          <TextInput\r\n            style={[globalStyles.customerInput, globalStyles.customerTextArea]}\r\n            placeholder=\"Customer Site Address\"\r\n            value={formData.customerSiteAddress}\r\n            onChangeText={(value) => handleInputChange('customerSiteAddress', value)}\r\n            multiline\r\n            numberOfLines={4}\r\n            textAlignVertical=\"top\"\r\n            placeholderTextColor=\"#999\"\r\n          />\r\n        </View>\r\n\r\n        <TouchableOpacity style={globalStyles.customerSubmitButton} onPress={handleSubmit}>\r\n          <Text style={globalStyles.customerSubmitButtonText}>Submit</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default AddCustomerScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}