{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { globalStyles } from \"../styles/globalStyles\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TipsModal = function TipsModal(_ref) {\n  var visible = _ref.visible,\n    onClose = _ref.onClose;\n  var _useState = useState('English'),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedLanguage = _useState2[0],\n    setSelectedLanguage = _useState2[1];\n  var tips = [{\n    id: 1,\n    title: 'Work Check',\n    content: 'Work Check\" in option is only for employees who are working in the field.'\n  }, {\n    id: 2,\n    title: 'Work Check In',\n    content: 'Tap in \"work check\" in when at a time you visit at site to work.'\n  }, {\n    id: 3,\n    title: 'Office Attendance',\n    content: 'Office employee needs to regular mark attendance in and out. office employees does not require to work check in.'\n  }, {\n    id: 4,\n    title: 'Location Detection',\n    content: 'When you work check in and type a relevant note, location detects automatically.'\n  }, {\n    id: 5,\n    title: 'Leave Option',\n    content: 'Office and fields employees both can use leave option to take necessary leaves available from his account.'\n  }, {\n    id: 6,\n    title: 'Leave Request',\n    content: 'Employees can request a leave to their company management, if leave balance not available in his account.'\n  }];\n  var languages = ['English', 'Hindi', 'Tamil', 'Telugu'];\n  return _jsx(Modal, {\n    visible: visible,\n    transparent: true,\n    animationType: \"fade\",\n    onRequestClose: onClose,\n    children: _jsx(View, {\n      style: globalStyles.tipsModalOverlay,\n      children: _jsxs(View, {\n        style: globalStyles.tipsModalContainer,\n        children: [_jsxs(View, {\n          style: globalStyles.tipsModalHeader,\n          children: [_jsx(Text, {\n            style: globalStyles.tipsModalTitle,\n            children: \"Tips\"\n          }), _jsxs(View, {\n            style: globalStyles.tipsLanguageSelector,\n            children: [_jsx(Text, {\n              style: globalStyles.tipsLanguageText,\n              children: selectedLanguage\n            }), _jsx(Ionicons, {\n              name: \"chevron-down\",\n              size: 16,\n              color: \"#666\"\n            })]\n          })]\n        }), _jsx(ScrollView, {\n          style: globalStyles.tipsModalContent,\n          showsVerticalScrollIndicator: false,\n          children: tips.map(function (tip) {\n            return _jsxs(View, {\n              style: globalStyles.tipsModalTipItem,\n              children: [_jsxs(Text, {\n                style: globalStyles.tipsModalTipNumber,\n                children: [\"Tip \", tip.id, \":\"]\n              }), _jsx(Text, {\n                style: globalStyles.tipsModalTipContent,\n                children: tip.content\n              })]\n            }, tip.id);\n          })\n        }), _jsx(View, {\n          style: globalStyles.tipsModalFooter,\n          children: _jsx(TouchableOpacity, {\n            style: globalStyles.tipsModalCloseButton,\n            onPress: onClose,\n            children: _jsx(Text, {\n              style: globalStyles.tipsModalCloseButtonText,\n              children: \"Close\"\n            })\n          })\n        })]\n      })\n    })\n  });\n};\nexport default TipsModal;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","Modal","ScrollView","Ionicons","globalStyles","jsx","_jsx","jsxs","_jsxs","TipsModal","_ref","visible","onClose","_useState","_useState2","_slicedToArray","selectedLanguage","setSelectedLanguage","tips","id","title","content","languages","transparent","animationType","onRequestClose","children","style","tipsModalOverlay","tipsModalContainer","tipsModalHeader","tipsModalTitle","tipsLanguageSelector","tipsLanguageText","name","size","color","tipsModalContent","showsVerticalScrollIndicator","map","tip","tipsModalTipItem","tipsModalTipNumber","tipsModalTipContent","tipsModalFooter","tipsModalCloseButton","onPress","tipsModalCloseButtonText"],"sources":["D:/Download/Atom lift mobile app/src/components/TipsModal.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  Modal,\r\n  ScrollView,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { globalStyles } from '../styles/globalStyles';\r\nimport { Tip } from '../../types';\r\n\r\ninterface TipsModalProps {\r\n  visible: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst TipsModal: React.FC<TipsModalProps> = ({ visible, onClose }) => {\r\n  const [selectedLanguage, setSelectedLanguage] = useState<string>('English');\r\n\r\n  const tips: Tip[] = [\r\n    {\r\n      id: 1,\r\n      title: 'Work Check',\r\n      content: 'Work Check\" in option is only for employees who are working in the field.',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Work Check In',\r\n      content: 'Tap in \"work check\" in when at a time you visit at site to work.',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Office Attendance',\r\n      content: 'Office employee needs to regular mark attendance in and out. office employees does not require to work check in.',\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Location Detection',\r\n      content: 'When you work check in and type a relevant note, location detects automatically.',\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'Leave Option',\r\n      content: 'Office and fields employees both can use leave option to take necessary leaves available from his account.',\r\n    },\r\n    {\r\n      id: 6,\r\n      title: 'Leave Request',\r\n      content: 'Employees can request a leave to their company management, if leave balance not available in his account.',\r\n    },\r\n  ];\r\n\r\n  const languages = ['English', 'Hindi', 'Tamil', 'Telugu'];\r\n\r\n  return (\r\n    <Modal\r\n      visible={visible}\r\n      transparent={true}\r\n      animationType=\"fade\"\r\n      onRequestClose={onClose}\r\n    >\r\n      <View style={globalStyles.tipsModalOverlay}>\r\n        <View style={globalStyles.tipsModalContainer}>\r\n          {/* Header */}\r\n          <View style={globalStyles.tipsModalHeader}>\r\n            <Text style={globalStyles.tipsModalTitle}>Tips</Text>\r\n            <View style={globalStyles.tipsLanguageSelector}>\r\n              <Text style={globalStyles.tipsLanguageText}>{selectedLanguage}</Text>\r\n              <Ionicons name=\"chevron-down\" size={16} color=\"#666\" />\r\n            </View>\r\n          </View>\r\n\r\n          {/* Content */}\r\n          <ScrollView style={globalStyles.tipsModalContent} showsVerticalScrollIndicator={false}>\r\n            {tips.map((tip) => (\r\n              <View key={tip.id} style={globalStyles.tipsModalTipItem}>\r\n                <Text style={globalStyles.tipsModalTipNumber}>Tip {tip.id}:</Text>\r\n                <Text style={globalStyles.tipsModalTipContent}>{tip.content}</Text>\r\n              </View>\r\n            ))}\r\n          </ScrollView>\r\n\r\n          {/* Close Button */}\r\n          <View style={globalStyles.tipsModalFooter}>\r\n            <TouchableOpacity style={globalStyles.tipsModalCloseButton} onPress={onClose}>\r\n              <Text style={globalStyles.tipsModalCloseButtonText}>Close</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default TipsModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}