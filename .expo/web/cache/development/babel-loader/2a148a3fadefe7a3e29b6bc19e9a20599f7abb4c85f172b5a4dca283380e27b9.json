{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { globalStyles } from \"../styles/globalStyles\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LeaveListScreen = function LeaveListScreen(_ref) {\n  var onBack = _ref.onBack,\n    onAddNew = _ref.onAddNew;\n  var handleAddNewPress = function handleAddNewPress() {\n    console.log('Add new button pressed in LeaveListScreen');\n    onAddNew();\n  };\n  return _jsxs(SafeAreaView, {\n    style: globalStyles.complaintContainer,\n    children: [_jsx(StatusBar, {\n      barStyle: \"light-content\",\n      backgroundColor: \"#3498db\"\n    }), _jsxs(View, {\n      style: globalStyles.complaintHeader,\n      children: [_jsx(TouchableOpacity, {\n        onPress: onBack,\n        style: globalStyles.complaintBackButton,\n        children: _jsx(Ionicons, {\n          name: \"arrow-back\",\n          size: 24,\n          color: \"#fff\"\n        })\n      }), _jsx(Text, {\n        style: globalStyles.leaveTitle,\n        children: \"Leave\"\n      }), _jsxs(TouchableOpacity, {\n        onPress: onAddNew,\n        style: globalStyles.leaveAddButton,\n        children: [_jsx(Ionicons, {\n          name: \"add\",\n          size: 20,\n          color: \"#fff\"\n        }), _jsx(Text, {\n          style: globalStyles.leaveAddText,\n          children: \"Add new\"\n        })]\n      })]\n    }), _jsxs(View, {\n      style: globalStyles.leaveContent,\n      children: [_jsx(Text, {\n        style: globalStyles.leaveEmptyText,\n        children: \"No leave requests found\"\n      }), _jsx(Text, {\n        style: globalStyles.leaveEmptySubtext,\n        children: \"Tap \\\"Add new\\\" to create a leave request\"\n      })]\n    })]\n  });\n};\nexport default LeaveListScreen;","map":{"version":3,"names":["React","View","Text","SafeAreaView","TouchableOpacity","StatusBar","Ionicons","globalStyles","jsx","_jsx","jsxs","_jsxs","LeaveListScreen","_ref","onBack","onAddNew","handleAddNewPress","console","log","style","complaintContainer","children","barStyle","backgroundColor","complaintHeader","onPress","complaintBackButton","name","size","color","leaveTitle","leaveAddButton","leaveAddText","leaveContent","leaveEmptyText","leaveEmptySubtext"],"sources":["D:/Download/Atom lift mobile app/src/screens/LeaveListScreen.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  StatusBar,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { globalStyles } from '../styles/globalStyles';\r\n\r\ninterface LeaveListScreenProps {\r\n  onBack: () => void;\r\n  onAddNew: () => void;\r\n}\r\n\r\nconst LeaveListScreen: React.FC<LeaveListScreenProps> = ({ onBack, onAddNew }) => {\r\n  const handleAddNewPress = (): void => {\r\n    console.log('Add new button pressed in LeaveListScreen');\r\n    onAddNew();\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={globalStyles.complaintContainer}>\r\n      <StatusBar barStyle=\"light-content\" backgroundColor=\"#3498db\" />\r\n      \r\n      {/* Header */}\r\n      <View style={globalStyles.complaintHeader}>\r\n        <TouchableOpacity onPress={onBack} style={globalStyles.complaintBackButton}>\r\n          <Ionicons name=\"arrow-back\" size={24} color=\"#fff\" />\r\n        </TouchableOpacity>\r\n        \r\n        <Text style={globalStyles.leaveTitle}>Leave</Text>\r\n        \r\n        <TouchableOpacity onPress={onAddNew} style={globalStyles.leaveAddButton}>\r\n          <Ionicons name=\"add\" size={20} color=\"#fff\" />\r\n          <Text style={globalStyles.leaveAddText}>Add new</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      {/* Empty Content Area */}\r\n      <View style={globalStyles.leaveContent}>\r\n        <Text style={globalStyles.leaveEmptyText}>No leave requests found</Text>\r\n        <Text style={globalStyles.leaveEmptySubtext}>Tap \"Add new\" to create a leave request</Text>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default LeaveListScreen;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,SAAA;AAQ1B,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,YAAY;AAAiC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAOtD,IAAMC,eAA+C,GAAG,SAAlDA,eAA+CA,CAAAC,IAAA,EAA6B;EAAA,IAAvBC,MAAM,GAAAD,IAAA,CAANC,MAAM;IAAEC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;EACzE,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAe;IACpCC,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;IACxDH,QAAQ,CAAC,CAAC;EACZ,CAAC;EAED,OACEJ,KAAA,CAACR,YAAY;IAACgB,KAAK,EAAEZ,YAAY,CAACa,kBAAmB;IAAAC,QAAA,GACnDZ,IAAA,CAACJ,SAAS;MAACiB,QAAQ,EAAC,eAAe;MAACC,eAAe,EAAC;IAAS,CAAE,CAAC,EAGhEZ,KAAA,CAACV,IAAI;MAACkB,KAAK,EAAEZ,YAAY,CAACiB,eAAgB;MAAAH,QAAA,GACxCZ,IAAA,CAACL,gBAAgB;QAACqB,OAAO,EAAEX,MAAO;QAACK,KAAK,EAAEZ,YAAY,CAACmB,mBAAoB;QAAAL,QAAA,EACzEZ,IAAA,CAACH,QAAQ;UAACqB,IAAI,EAAC,YAAY;UAACC,IAAI,EAAE,EAAG;UAACC,KAAK,EAAC;QAAM,CAAE;MAAC,CACrC,CAAC,EAEnBpB,IAAA,CAACP,IAAI;QAACiB,KAAK,EAAEZ,YAAY,CAACuB,UAAW;QAAAT,QAAA,EAAC;MAAK,CAAM,CAAC,EAElDV,KAAA,CAACP,gBAAgB;QAACqB,OAAO,EAAEV,QAAS;QAACI,KAAK,EAAEZ,YAAY,CAACwB,cAAe;QAAAV,QAAA,GACtEZ,IAAA,CAACH,QAAQ;UAACqB,IAAI,EAAC,KAAK;UAACC,IAAI,EAAE,EAAG;UAACC,KAAK,EAAC;QAAM,CAAE,CAAC,EAC9CpB,IAAA,CAACP,IAAI;UAACiB,KAAK,EAAEZ,YAAY,CAACyB,YAAa;UAAAX,QAAA,EAAC;QAAO,CAAM,CAAC;MAAA,CACtC,CAAC;IAAA,CACf,CAAC,EAGPV,KAAA,CAACV,IAAI;MAACkB,KAAK,EAAEZ,YAAY,CAAC0B,YAAa;MAAAZ,QAAA,GACrCZ,IAAA,CAACP,IAAI;QAACiB,KAAK,EAAEZ,YAAY,CAAC2B,cAAe;QAAAb,QAAA,EAAC;MAAuB,CAAM,CAAC,EACxEZ,IAAA,CAACP,IAAI;QAACiB,KAAK,EAAEZ,YAAY,CAAC4B,iBAAkB;QAAAd,QAAA,EAAC;MAAuC,CAAM,CAAC;IAAA,CACvF,CAAC;EAAA,CACK,CAAC;AAEnB,CAAC;AAED,eAAeT,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}