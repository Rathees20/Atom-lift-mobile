{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Ionicons } from '@expo/vector-icons';\nimport CustomDrawer from \"../components/CustomDrawer\";\nimport { globalStyles } from \"../styles/globalStyles\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var onLogout = _ref.onLogout;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDrawerOpen = _useState2[0],\n    setIsDrawerOpen = _useState2[1];\n  var _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width;\n  var menuItems = [{\n    id: 1,\n    title: 'Tickets',\n    icon: 'receipt-outline',\n    color: '#3498db'\n  }, {\n    id: 2,\n    title: 'Routine Services',\n    icon: 'settings-outline',\n    color: '#3498db'\n  }, {\n    id: 3,\n    title: 'Customers',\n    icon: 'people-outline',\n    color: '#3498db'\n  }, {\n    id: 4,\n    title: 'AMC',\n    icon: 'calendar-outline',\n    color: '#9b59b6'\n  }];\n  var handleMenuPress = function handleMenuPress(item) {\n    console.log(`Pressed: ${item.title}`);\n    if (item.title === 'Tickets') {}\n  };\n  var handleMarkAttendance = function handleMarkAttendance() {\n    console.log('Mark Attendance In pressed');\n  };\n  var handleWorkCheckIn = function handleWorkCheckIn() {\n    console.log('Work Check In pressed');\n  };\n  var toggleDrawer = function toggleDrawer() {\n    setIsDrawerOpen(!isDrawerOpen);\n  };\n  var closeDrawer = function closeDrawer() {\n    setIsDrawerOpen(false);\n  };\n  return _jsxs(SafeAreaView, {\n    style: globalStyles.homeContainer,\n    children: [_jsx(StatusBar, {\n      barStyle: \"light-content\",\n      backgroundColor: \"#3498db\"\n    }), _jsx(View, {\n      style: globalStyles.homeHeader,\n      children: _jsx(View, {\n        style: globalStyles.homeHeaderBottom,\n        children: _jsx(TouchableOpacity, {\n          onPress: toggleDrawer,\n          children: _jsx(Ionicons, {\n            name: \"menu\",\n            size: 24,\n            color: \"#fff\"\n          })\n        })\n      })\n    }), _jsxs(ScrollView, {\n      style: globalStyles.homeContent,\n      showsVerticalScrollIndicator: false,\n      children: [_jsx(View, {\n        style: globalStyles.homeMenuGrid,\n        children: menuItems.map(function (item) {\n          return _jsxs(TouchableOpacity, {\n            style: globalStyles.homeMenuCard,\n            onPress: function onPress() {\n              return handleMenuPress(item);\n            },\n            children: [_jsx(View, {\n              style: [globalStyles.homeIconContainer, {\n                backgroundColor: item.color\n              }],\n              children: _jsx(Ionicons, {\n                name: item.icon,\n                size: 32,\n                color: \"#fff\"\n              })\n            }), _jsx(Text, {\n              style: globalStyles.homeMenuTitle,\n              children: item.title\n            })]\n          }, item.id);\n        })\n      }), _jsxs(View, {\n        style: globalStyles.homeActionButtons,\n        children: [_jsx(TouchableOpacity, {\n          style: globalStyles.homeActionButton,\n          onPress: handleMarkAttendance,\n          children: _jsx(Text, {\n            style: globalStyles.homeActionButtonText,\n            children: \"Mark Attendance In\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: globalStyles.homeActionButton,\n          onPress: handleWorkCheckIn,\n          children: _jsx(Text, {\n            style: globalStyles.homeActionButtonText,\n            children: \"Work Check In\"\n          })\n        })]\n      }), _jsxs(View, {\n        style: globalStyles.homeStatusContainer,\n        children: [_jsx(Text, {\n          style: globalStyles.homeStatusText,\n          children: \"Last Check In: null || null ||\"\n        }), _jsx(Ionicons, {\n          name: \"location-outline\",\n          size: 16,\n          color: \"#3498db\"\n        })]\n      })]\n    }), _jsx(Modal, {\n      visible: isDrawerOpen,\n      animationType: \"slide\",\n      transparent: true,\n      onRequestClose: closeDrawer,\n      children: _jsxs(View, {\n        style: globalStyles.homeModalOverlay,\n        children: [_jsx(View, {\n          style: [globalStyles.homeDrawerContainer, {\n            width: width * 0.8\n          }],\n          children: _jsx(CustomDrawer, {\n            onClose: closeDrawer,\n            onLogout: onLogout\n          })\n        }), _jsx(TouchableOpacity, {\n          style: globalStyles.homeModalBackdrop,\n          activeOpacity: 1,\n          onPress: closeDrawer\n        })]\n      })\n    })]\n  });\n};\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","View","Text","SafeAreaView","TouchableOpacity","ScrollView","StatusBar","Modal","Dimensions","Ionicons","CustomDrawer","globalStyles","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","onLogout","_useState","_useState2","_slicedToArray","isDrawerOpen","setIsDrawerOpen","_Dimensions$get","get","width","menuItems","id","title","icon","color","handleMenuPress","item","console","log","handleMarkAttendance","handleWorkCheckIn","toggleDrawer","closeDrawer","style","homeContainer","children","barStyle","backgroundColor","homeHeader","homeHeaderBottom","onPress","name","size","homeContent","showsVerticalScrollIndicator","homeMenuGrid","map","homeMenuCard","homeIconContainer","homeMenuTitle","homeActionButtons","homeActionButton","homeActionButtonText","homeStatusContainer","homeStatusText","visible","animationType","transparent","onRequestClose","homeModalOverlay","homeDrawerContainer","onClose","homeModalBackdrop","activeOpacity"],"sources":["D:/Download/Atom lift mobile app/src/screens/HomeScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  StatusBar,\r\n  Modal,\r\n  Dimensions,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { HomeScreenProps, MenuItem } from '../../types';\r\nimport CustomDrawer from '../components/CustomDrawer';\r\nimport { globalStyles } from '../styles/globalStyles';\r\n\r\nconst HomeScreen: React.FC<HomeScreenProps> = ({ onLogout }) => {\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState<boolean>(false);\r\n  const { width } = Dimensions.get('window');\r\n\r\n  const menuItems: MenuItem[] = [\r\n    {\r\n      id: 1,\r\n      title: 'Tickets',\r\n      icon: 'receipt-outline',\r\n      color: '#3498db',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Routine Services',\r\n      icon: 'settings-outline',\r\n      color: '#3498db',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Customers',\r\n      icon: 'people-outline',\r\n      color: '#3498db',\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'AMC',\r\n      icon: 'calendar-outline',\r\n      color: '#9b59b6',\r\n    },\r\n  ];\r\n\r\n  const handleMenuPress = (item: MenuItem): void => {\r\n    console.log(`Pressed: ${item.title}`);\r\n    if (item.title === 'Tickets') {\r\n      // Navigate to AddComplaint screen\r\n      // This will be handled by the drawer menu\r\n    }\r\n  };\r\n\r\n  const handleMarkAttendance = (): void => {\r\n    console.log('Mark Attendance In pressed');\r\n    // Add attendance logic here\r\n  };\r\n\r\n  const handleWorkCheckIn = (): void => {\r\n    console.log('Work Check In pressed');\r\n    // Add check-in logic here\r\n  };\r\n\r\n  const toggleDrawer = (): void => {\r\n    setIsDrawerOpen(!isDrawerOpen);\r\n  };\r\n\r\n  const closeDrawer = (): void => {\r\n    setIsDrawerOpen(false);\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={globalStyles.homeContainer}>\r\n      <StatusBar barStyle=\"light-content\" backgroundColor=\"#3498db\" />\r\n      \r\n      {/* Header */}\r\n      <View style={globalStyles.homeHeader}>\r\n        <View style={globalStyles.homeHeaderBottom}>\r\n          <TouchableOpacity onPress={toggleDrawer}>\r\n            <Ionicons name=\"menu\" size={24} color=\"#fff\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n\r\n      <ScrollView style={globalStyles.homeContent} showsVerticalScrollIndicator={false}>\r\n        {/* Menu Cards Grid */}\r\n        <View style={globalStyles.homeMenuGrid}>\r\n          {menuItems.map((item) => (\r\n            <TouchableOpacity\r\n              key={item.id}\r\n              style={globalStyles.homeMenuCard}\r\n              onPress={() => handleMenuPress(item)}\r\n            >\r\n              <View style={[globalStyles.homeIconContainer, { backgroundColor: item.color }]}>\r\n                <Ionicons name={item.icon} size={32} color=\"#fff\" />\r\n              </View>\r\n              <Text style={globalStyles.homeMenuTitle}>{item.title}</Text>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n\r\n        {/* Action Buttons */}\r\n        <View style={globalStyles.homeActionButtons}>\r\n          <TouchableOpacity style={globalStyles.homeActionButton} onPress={handleMarkAttendance}>\r\n            <Text style={globalStyles.homeActionButtonText}>Mark Attendance In</Text>\r\n          </TouchableOpacity>\r\n          \r\n          <TouchableOpacity style={globalStyles.homeActionButton} onPress={handleWorkCheckIn}>\r\n            <Text style={globalStyles.homeActionButtonText}>Work Check In</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        {/* Status Text */}\r\n        <View style={globalStyles.homeStatusContainer}>\r\n          <Text style={globalStyles.homeStatusText}>Last Check In: null || null ||</Text>\r\n          <Ionicons name=\"location-outline\" size={16} color=\"#3498db\" />\r\n        </View>\r\n      </ScrollView>\r\n\r\n      {/* Drawer Modal */}\r\n      <Modal\r\n        visible={isDrawerOpen}\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        onRequestClose={closeDrawer}\r\n      >\r\n        <View style={globalStyles.homeModalOverlay}>\r\n          <View style={[globalStyles.homeDrawerContainer, { width: width * 0.8 }]}>\r\n            <CustomDrawer onClose={closeDrawer} onLogout={onLogout} />\r\n          </View>\r\n          <TouchableOpacity\r\n            style={globalStyles.homeModalBackdrop}\r\n            activeOpacity={1}\r\n            onPress={closeDrawer}\r\n          />\r\n        </View>\r\n      </Modal>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}