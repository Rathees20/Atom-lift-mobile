{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { globalStyles } from \"../styles/globalStyles\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddComplaintScreen = function AddComplaintScreen(_ref) {\n  var onBack = _ref.onBack;\n  var _useState = useState({\n      type: '',\n      customerSite: '',\n      amc: '',\n      customerName: '',\n      customerMobile: '',\n      wing: '',\n      assign: '',\n      priority: '',\n      subject: '',\n      message: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    formData = _useState2[0],\n    setFormData = _useState2[1];\n  var handleInputChange = function handleInputChange(field, value) {\n    setFormData(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, field, value));\n    });\n  };\n  var handleSave = function handleSave() {\n    if (!formData.customerName || !formData.subject || !formData.message) {\n      Alert.alert('Error', 'Please fill in all required fields');\n      return;\n    }\n    console.log('Complaint data:', formData);\n    Alert.alert('Success', 'Complaint saved successfully!');\n    onBack();\n  };\n  var renderDropdownField = function renderDropdownField(label, field, placeholder) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n    return _jsxs(View, {\n      style: globalStyles.complaintFieldContainer,\n      children: [_jsx(Text, {\n        style: globalStyles.complaintFieldLabel,\n        children: label\n      }), _jsxs(View, {\n        style: globalStyles.complaintDropdownContainer,\n        children: [_jsx(TextInput, {\n          style: globalStyles.complaintDropdownInput,\n          placeholder: placeholder,\n          value: formData[field],\n          onChangeText: function onChangeText(value) {\n            return handleInputChange(field, value);\n          },\n          placeholderTextColor: \"#999\"\n        }), _jsx(Ionicons, {\n          name: \"chevron-down\",\n          size: 20,\n          color: \"#666\"\n        })]\n      })]\n    });\n  };\n  var renderTextInput = function renderTextInput(label, field, placeholder) {\n    var keyboardType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'default';\n    return _jsxs(View, {\n      style: globalStyles.complaintFieldContainer,\n      children: [_jsx(Text, {\n        style: globalStyles.complaintFieldLabel,\n        children: label\n      }), _jsx(TextInput, {\n        style: globalStyles.complaintTextInput,\n        placeholder: placeholder,\n        value: formData[field],\n        onChangeText: function onChangeText(value) {\n          return handleInputChange(field, value);\n        },\n        keyboardType: keyboardType,\n        placeholderTextColor: \"#999\"\n      })]\n    });\n  };\n  return _jsxs(SafeAreaView, {\n    style: globalStyles.complaintContainer,\n    children: [_jsx(StatusBar, {\n      barStyle: \"light-content\",\n      backgroundColor: \"#3498db\"\n    }), _jsxs(View, {\n      style: globalStyles.complaintHeader,\n      children: [_jsx(TouchableOpacity, {\n        onPress: onBack,\n        style: globalStyles.complaintBackButton,\n        children: _jsx(Ionicons, {\n          name: \"arrow-back\",\n          size: 24,\n          color: \"#fff\"\n        })\n      }), _jsxs(TouchableOpacity, {\n        onPress: handleSave,\n        style: globalStyles.complaintSaveButton,\n        children: [_jsx(Ionicons, {\n          name: \"checkmark\",\n          size: 20,\n          color: \"#fff\"\n        }), _jsx(Text, {\n          style: globalStyles.complaintSaveText,\n          children: \"Save\"\n        })]\n      })]\n    }), _jsxs(ScrollView, {\n      style: globalStyles.complaintContent,\n      showsVerticalScrollIndicator: false,\n      children: [renderDropdownField('Type:', 'type', 'Select Type', ['Service', 'Maintenance', 'Repair']), renderDropdownField('customer site', 'customerSite', 'Select Customer Site', ['Site A', 'Site B', 'Site C']), renderDropdownField('AMC:', 'amc', 'Select AMC', ['AMC 1', 'AMC 2', 'AMC 3']), renderDropdownField('assign', 'assign', 'Select Assignee', ['John Doe', 'Jane Smith', 'Mike Johnson']), renderDropdownField('Priority:', 'priority', 'Select Priority', ['High', 'Medium', 'Low']), renderTextInput('Customer Name', 'customerName', 'Enter customer name'), renderTextInput('Customer Mobile No.', 'customerMobile', 'Enter mobile number', 'phone-pad'), renderTextInput('Wing', 'wing', 'Enter wing'), renderTextInput('Subject', 'subject', 'Enter subject'), _jsxs(View, {\n        style: globalStyles.complaintFieldContainer,\n        children: [_jsx(Text, {\n          style: globalStyles.complaintFieldLabel,\n          children: \"Message\"\n        }), _jsx(TextInput, {\n          style: globalStyles.complaintMessageInput,\n          placeholder: \"Enter your message\",\n          value: formData.message,\n          onChangeText: function onChangeText(value) {\n            return handleInputChange('message', value);\n          },\n          multiline: true,\n          numberOfLines: 4,\n          placeholderTextColor: \"#999\"\n        })]\n      })]\n    })]\n  });\n};\nexport default AddComplaintScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","SafeAreaView","ScrollView","StatusBar","Alert","Ionicons","globalStyles","jsx","_jsx","jsxs","_jsxs","AddComplaintScreen","_ref","onBack","_useState","type","customerSite","amc","customerName","customerMobile","wing","assign","priority","subject","message","_useState2","_slicedToArray","formData","setFormData","handleInputChange","field","value","prev","_objectSpread","_defineProperty","handleSave","alert","console","log","renderDropdownField","label","placeholder","options","arguments","length","undefined","style","complaintFieldContainer","children","complaintFieldLabel","complaintDropdownContainer","complaintDropdownInput","onChangeText","placeholderTextColor","name","size","color","renderTextInput","keyboardType","complaintTextInput","complaintContainer","barStyle","backgroundColor","complaintHeader","onPress","complaintBackButton","complaintSaveButton","complaintSaveText","complaintContent","showsVerticalScrollIndicator","complaintMessageInput","multiline","numberOfLines"],"sources":["D:/Download/Atom lift mobile app/src/screens/AddComplaintScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  StatusBar,\r\n  Alert,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { globalStyles } from '../styles/globalStyles';\r\n\r\ninterface AddComplaintScreenProps {\r\n  onBack: () => void;\r\n}\r\n\r\nconst AddComplaintScreen: React.FC<AddComplaintScreenProps> = ({ onBack }) => {\r\n  const [formData, setFormData] = useState({\r\n    type: '',\r\n    customerSite: '',\r\n    amc: '',\r\n    customerName: '',\r\n    customerMobile: '',\r\n    wing: '',\r\n    assign: '',\r\n    priority: '',\r\n    subject: '',\r\n    message: '',\r\n  });\r\n\r\n  const handleInputChange = (field: string, value: string): void => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  const handleSave = (): void => {\r\n    // Validate required fields\r\n    if (!formData.customerName || !formData.subject || !formData.message) {\r\n      Alert.alert('Error', 'Please fill in all required fields');\r\n      return;\r\n    }\r\n\r\n    // Save complaint logic here\r\n    console.log('Complaint data:', formData);\r\n    Alert.alert('Success', 'Complaint saved successfully!');\r\n    onBack();\r\n  };\r\n\r\n  const renderDropdownField = (\r\n    label: string,\r\n    field: string,\r\n    placeholder: string,\r\n    options: string[] = []\r\n  ) => (\r\n    <View style={globalStyles.complaintFieldContainer}>\r\n      <Text style={globalStyles.complaintFieldLabel}>{label}</Text>\r\n      <View style={globalStyles.complaintDropdownContainer}>\r\n        <TextInput\r\n          style={globalStyles.complaintDropdownInput}\r\n          placeholder={placeholder}\r\n          value={formData[field as keyof typeof formData]}\r\n          onChangeText={(value) => handleInputChange(field, value)}\r\n          placeholderTextColor=\"#999\"\r\n        />\r\n        <Ionicons name=\"chevron-down\" size={20} color=\"#666\" />\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  const renderTextInput = (\r\n    label: string,\r\n    field: string,\r\n    placeholder: string,\r\n    keyboardType: 'default' | 'numeric' | 'phone-pad' = 'default'\r\n  ) => (\r\n    <View style={globalStyles.complaintFieldContainer}>\r\n      <Text style={globalStyles.complaintFieldLabel}>{label}</Text>\r\n      <TextInput\r\n        style={globalStyles.complaintTextInput}\r\n        placeholder={placeholder}\r\n        value={formData[field as keyof typeof formData]}\r\n        onChangeText={(value) => handleInputChange(field, value)}\r\n        keyboardType={keyboardType}\r\n        placeholderTextColor=\"#999\"\r\n      />\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <SafeAreaView style={globalStyles.complaintContainer}>\r\n      <StatusBar barStyle=\"light-content\" backgroundColor=\"#3498db\" />\r\n      \r\n      {/* Header */}\r\n      <View style={globalStyles.complaintHeader}>\r\n        <TouchableOpacity onPress={onBack} style={globalStyles.complaintBackButton}>\r\n          <Ionicons name=\"arrow-back\" size={24} color=\"#fff\" />\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={handleSave} style={globalStyles.complaintSaveButton}>\r\n          <Ionicons name=\"checkmark\" size={20} color=\"#fff\" />\r\n          <Text style={globalStyles.complaintSaveText}>Save</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      {/* Form Content */}\r\n      <ScrollView style={globalStyles.complaintContent} showsVerticalScrollIndicator={false}>\r\n        {/* Dropdown Fields */}\r\n        {renderDropdownField('Type:', 'type', 'Select Type', ['Service', 'Maintenance', 'Repair'])}\r\n        {renderDropdownField('customer site', 'customerSite', 'Select Customer Site', ['Site A', 'Site B', 'Site C'])}\r\n        {renderDropdownField('AMC:', 'amc', 'Select AMC', ['AMC 1', 'AMC 2', 'AMC 3'])}\r\n        {renderDropdownField('assign', 'assign', 'Select Assignee', ['John Doe', 'Jane Smith', 'Mike Johnson'])}\r\n        {renderDropdownField('Priority:', 'priority', 'Select Priority', ['High', 'Medium', 'Low'])}\r\n\r\n        {/* Text Input Fields */}\r\n        {renderTextInput('Customer Name', 'customerName', 'Enter customer name')}\r\n        {renderTextInput('Customer Mobile No.', 'customerMobile', 'Enter mobile number', 'phone-pad')}\r\n        {renderTextInput('Wing', 'wing', 'Enter wing')}\r\n        {renderTextInput('Subject', 'subject', 'Enter subject')}\r\n\r\n        {/* Message Field */}\r\n        <View style={globalStyles.complaintFieldContainer}>\r\n          <Text style={globalStyles.complaintFieldLabel}>Message</Text>\r\n          <TextInput\r\n            style={globalStyles.complaintMessageInput}\r\n            placeholder=\"Enter your message\"\r\n            value={formData.message}\r\n            onChangeText={(value) => handleInputChange('message', value)}\r\n            multiline\r\n            numberOfLines={4}\r\n            placeholderTextColor=\"#999\"\r\n          />\r\n        </View>\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default AddComplaintScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}