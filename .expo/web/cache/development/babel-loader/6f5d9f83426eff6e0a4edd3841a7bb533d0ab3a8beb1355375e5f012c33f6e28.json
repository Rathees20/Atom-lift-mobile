{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { globalStyles } from \"../styles/globalStyles\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RoutineMaintenanceScreen = function RoutineMaintenanceScreen(_ref) {\n  var onBack = _ref.onBack,\n    onNavigateToTodayServices = _ref.onNavigateToTodayServices,\n    onNavigateToThisMonthDue = _ref.onNavigateToThisMonthDue,\n    onNavigateToThisMonthOverdue = _ref.onNavigateToThisMonthOverdue,\n    onNavigateToLastMonthOverdue = _ref.onNavigateToLastMonthOverdue;\n  var maintenanceItems = [{\n    id: 1,\n    title: \"Today's Services\",\n    icon: 'settings-outline',\n    color: '#3498db'\n  }, {\n    id: 2,\n    title: 'This Month Due',\n    icon: 'settings-outline',\n    color: '#3498db'\n  }, {\n    id: 3,\n    title: 'This Month Overdue',\n    icon: 'settings-outline',\n    color: '#3498db'\n  }, {\n    id: 4,\n    title: 'Last Month Overdue',\n    icon: 'settings-outline',\n    color: '#3498db'\n  }, {\n    id: 5,\n    title: 'More Filter',\n    icon: 'settings-outline',\n    color: '#3498db'\n  }];\n  var handleItemPress = function handleItemPress(item) {\n    switch (item.id) {\n      case 1:\n        onNavigateToTodayServices();\n        break;\n      case 2:\n        onNavigateToThisMonthDue();\n        break;\n      case 3:\n        onNavigateToThisMonthOverdue();\n        break;\n      case 4:\n        onNavigateToLastMonthOverdue();\n        break;\n      case 5:\n        console.log(`Pressed: ${item.title}`);\n        break;\n      default:\n        console.log(`Pressed: ${item.title}`);\n        break;\n    }\n  };\n  return _jsxs(SafeAreaView, {\n    style: globalStyles.routineMaintenanceContainer,\n    children: [_jsx(StatusBar, {\n      barStyle: \"light-content\",\n      backgroundColor: \"#3498db\"\n    }), _jsxs(View, {\n      style: globalStyles.routineMaintenanceHeader,\n      children: [_jsx(TouchableOpacity, {\n        onPress: onBack,\n        style: globalStyles.routineMaintenanceBackButton,\n        children: _jsx(Ionicons, {\n          name: \"arrow-back\",\n          size: 24,\n          color: \"#fff\"\n        })\n      }), _jsx(Text, {\n        style: globalStyles.routineMaintenanceTitle,\n        children: \"Routine Maintenance\"\n      }), _jsx(View, {\n        style: globalStyles.routineMaintenanceHeaderSpacer\n      })]\n    }), _jsx(ScrollView, {\n      style: globalStyles.routineMaintenanceContent,\n      showsVerticalScrollIndicator: false,\n      children: maintenanceItems.map(function (item) {\n        return _jsxs(TouchableOpacity, {\n          style: globalStyles.routineMaintenanceItem,\n          onPress: function onPress() {\n            return handleItemPress(item);\n          },\n          children: [_jsxs(View, {\n            style: globalStyles.routineMaintenanceItemLeft,\n            children: [_jsx(View, {\n              style: [globalStyles.routineMaintenanceIconContainer, {\n                backgroundColor: item.color\n              }],\n              children: _jsx(Ionicons, {\n                name: item.icon,\n                size: 24,\n                color: \"#fff\"\n              })\n            }), _jsx(Text, {\n              style: globalStyles.routineMaintenanceItemText,\n              children: item.title\n            })]\n          }), _jsx(Ionicons, {\n            name: \"chevron-forward\",\n            size: 20,\n            color: \"#2c3e50\"\n          })]\n        }, item.id);\n      })\n    }), _jsx(Modal, {\n      visible: showNoDataModal,\n      transparent: true,\n      animationType: \"fade\",\n      onRequestClose: function onRequestClose() {\n        return setShowNoDataModal(false);\n      },\n      children: _jsx(View, {\n        style: globalStyles.tipsModalOverlay,\n        children: _jsxs(View, {\n          style: globalStyles.tipsModalContainer,\n          children: [_jsxs(View, {\n            style: globalStyles.tipsModalHeader,\n            children: [_jsx(Text, {\n              style: globalStyles.tipsModalTitle,\n              children: \"No Data Found\"\n            }), _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setShowNoDataModal(false);\n              },\n              style: globalStyles.tipsModalCloseButton,\n              children: _jsx(Ionicons, {\n                name: \"close\",\n                size: 24,\n                color: \"#2c3e50\"\n              })\n            })]\n          }), _jsx(View, {\n            style: globalStyles.tipsModalContent,\n            children: _jsx(View, {\n              style: globalStyles.tipsModalTipItem,\n              children: _jsxs(Text, {\n                style: globalStyles.tipsModalTipContent,\n                children: [\"No data available for \\\"\", selectedItemTitle, \"\\\" at the moment.\"]\n              })\n            })\n          }), _jsx(View, {\n            style: globalStyles.tipsModalFooter,\n            children: _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return setShowNoDataModal(false);\n              },\n              style: globalStyles.tipsModalCloseButton,\n              children: _jsx(Text, {\n                style: globalStyles.tipsModalCloseButtonText,\n                children: \"Close\"\n              })\n            })\n          })]\n        })\n      })\n    })]\n  });\n};\nexport default RoutineMaintenanceScreen;","map":{"version":3,"names":["React","View","Text","SafeAreaView","TouchableOpacity","ScrollView","StatusBar","Ionicons","globalStyles","jsx","_jsx","jsxs","_jsxs","RoutineMaintenanceScreen","_ref","onBack","onNavigateToTodayServices","onNavigateToThisMonthDue","onNavigateToThisMonthOverdue","onNavigateToLastMonthOverdue","maintenanceItems","id","title","icon","color","handleItemPress","item","console","log","style","routineMaintenanceContainer","children","barStyle","backgroundColor","routineMaintenanceHeader","onPress","routineMaintenanceBackButton","name","size","routineMaintenanceTitle","routineMaintenanceHeaderSpacer","routineMaintenanceContent","showsVerticalScrollIndicator","map","routineMaintenanceItem","routineMaintenanceItemLeft","routineMaintenanceIconContainer","routineMaintenanceItemText","Modal","visible","showNoDataModal","transparent","animationType","onRequestClose","setShowNoDataModal","tipsModalOverlay","tipsModalContainer","tipsModalHeader","tipsModalTitle","tipsModalCloseButton","tipsModalContent","tipsModalTipItem","tipsModalTipContent","selectedItemTitle","tipsModalFooter","tipsModalCloseButtonText"],"sources":["D:/Download/Atom lift mobile app/src/screens/RoutineMaintenanceScreen.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  StatusBar,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { globalStyles } from '../styles/globalStyles';\r\n\r\ninterface RoutineMaintenanceScreenProps {\r\n  onBack: () => void;\r\n  onNavigateToTodayServices: () => void;\r\n  onNavigateToThisMonthDue: () => void;\r\n  onNavigateToThisMonthOverdue: () => void;\r\n  onNavigateToLastMonthOverdue: () => void;\r\n}\r\n\r\ninterface MaintenanceItem {\r\n  id: number;\r\n  title: string;\r\n  icon: keyof typeof import('@expo/vector-icons').Ionicons.glyphMap;\r\n  color: string;\r\n}\r\n\r\nconst RoutineMaintenanceScreen: React.FC<RoutineMaintenanceScreenProps> = ({ \r\n  onBack,\r\n  onNavigateToTodayServices,\r\n  onNavigateToThisMonthDue,\r\n  onNavigateToThisMonthOverdue,\r\n  onNavigateToLastMonthOverdue,\r\n}) => {\r\n\r\n  const maintenanceItems: MaintenanceItem[] = [\r\n    {\r\n      id: 1,\r\n      title: \"Today's Services\",\r\n      icon: 'settings-outline' as const,\r\n      color: '#3498db',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'This Month Due',\r\n      icon: 'settings-outline' as const,\r\n      color: '#3498db',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'This Month Overdue',\r\n      icon: 'settings-outline' as const,\r\n      color: '#3498db',\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Last Month Overdue',\r\n      icon: 'settings-outline' as const,\r\n      color: '#3498db',\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'More Filter',\r\n      icon: 'settings-outline' as const,\r\n      color: '#3498db',\r\n    },\r\n  ];\r\n\r\n  const handleItemPress = (item: MaintenanceItem): void => {\r\n    switch (item.id) {\r\n      case 1:\r\n        onNavigateToTodayServices();\r\n        break;\r\n      case 2:\r\n        onNavigateToThisMonthDue();\r\n        break;\r\n      case 3:\r\n        onNavigateToThisMonthOverdue();\r\n        break;\r\n      case 4:\r\n        onNavigateToLastMonthOverdue();\r\n        break;\r\n      case 5:\r\n        console.log(`Pressed: ${item.title}`);\r\n        // Add navigation logic here for More Filter\r\n        break;\r\n      default:\r\n        console.log(`Pressed: ${item.title}`);\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={globalStyles.routineMaintenanceContainer}>\r\n      <StatusBar barStyle=\"light-content\" backgroundColor=\"#3498db\" />\r\n      \r\n      {/* Header */}\r\n      <View style={globalStyles.routineMaintenanceHeader}>\r\n        <TouchableOpacity onPress={onBack} style={globalStyles.routineMaintenanceBackButton}>\r\n          <Ionicons name=\"arrow-back\" size={24} color=\"#fff\" />\r\n        </TouchableOpacity>\r\n        <Text style={globalStyles.routineMaintenanceTitle}>Routine Maintenance</Text>\r\n        <View style={globalStyles.routineMaintenanceHeaderSpacer} />\r\n      </View>\r\n\r\n      {/* Content */}\r\n      <ScrollView style={globalStyles.routineMaintenanceContent} showsVerticalScrollIndicator={false}>\r\n        {maintenanceItems.map((item) => (\r\n          <TouchableOpacity\r\n            key={item.id}\r\n            style={globalStyles.routineMaintenanceItem}\r\n            onPress={() => handleItemPress(item)}\r\n          >\r\n            <View style={globalStyles.routineMaintenanceItemLeft}>\r\n              <View style={[globalStyles.routineMaintenanceIconContainer, { backgroundColor: item.color }]}>\r\n                <Ionicons name={item.icon} size={24} color=\"#fff\" />\r\n              </View>\r\n              <Text style={globalStyles.routineMaintenanceItemText}>{item.title}</Text>\r\n            </View>\r\n            <Ionicons name=\"chevron-forward\" size={20} color=\"#2c3e50\" />\r\n          </TouchableOpacity>\r\n        ))}\r\n      </ScrollView>\r\n\r\n      {/* No Data Found Modal */}\r\n      <Modal\r\n        visible={showNoDataModal}\r\n        transparent={true}\r\n        animationType=\"fade\"\r\n        onRequestClose={() => setShowNoDataModal(false)}\r\n      >\r\n        <View style={globalStyles.tipsModalOverlay}>\r\n          <View style={globalStyles.tipsModalContainer}>\r\n            <View style={globalStyles.tipsModalHeader}>\r\n              <Text style={globalStyles.tipsModalTitle}>No Data Found</Text>\r\n              <TouchableOpacity\r\n                onPress={() => setShowNoDataModal(false)}\r\n                style={globalStyles.tipsModalCloseButton}\r\n              >\r\n                <Ionicons name=\"close\" size={24} color=\"#2c3e50\" />\r\n              </TouchableOpacity>\r\n            </View>\r\n            <View style={globalStyles.tipsModalContent}>\r\n              <View style={globalStyles.tipsModalTipItem}>\r\n                <Text style={globalStyles.tipsModalTipContent}>\r\n                  No data available for \"{selectedItemTitle}\" at the moment.\r\n                </Text>\r\n              </View>\r\n            </View>\r\n            <View style={globalStyles.tipsModalFooter}>\r\n              <TouchableOpacity\r\n                onPress={() => setShowNoDataModal(false)}\r\n                style={globalStyles.tipsModalCloseButton}\r\n              >\r\n                <Text style={globalStyles.tipsModalCloseButtonText}>Close</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default RoutineMaintenanceScreen;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,SAAA;AAS1B,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,YAAY;AAAiC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAiBtD,IAAMC,wBAAiE,GAAG,SAApEA,wBAAiEA,CAAAC,IAAA,EAMjE;EAAA,IALJC,MAAM,GAAAD,IAAA,CAANC,MAAM;IACNC,yBAAyB,GAAAF,IAAA,CAAzBE,yBAAyB;IACzBC,wBAAwB,GAAAH,IAAA,CAAxBG,wBAAwB;IACxBC,4BAA4B,GAAAJ,IAAA,CAA5BI,4BAA4B;IAC5BC,4BAA4B,GAAAL,IAAA,CAA5BK,4BAA4B;EAG5B,IAAMC,gBAAmC,GAAG,CAC1C;IACEC,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,kBAAkB;IACzBC,IAAI,EAAE,kBAA2B;IACjCC,KAAK,EAAE;EACT,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,gBAAgB;IACvBC,IAAI,EAAE,kBAA2B;IACjCC,KAAK,EAAE;EACT,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,oBAAoB;IAC3BC,IAAI,EAAE,kBAA2B;IACjCC,KAAK,EAAE;EACT,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,oBAAoB;IAC3BC,IAAI,EAAE,kBAA2B;IACjCC,KAAK,EAAE;EACT,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,aAAa;IACpBC,IAAI,EAAE,kBAA2B;IACjCC,KAAK,EAAE;EACT,CAAC,CACF;EAED,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,IAAqB,EAAW;IACvD,QAAQA,IAAI,CAACL,EAAE;MACb,KAAK,CAAC;QACJL,yBAAyB,CAAC,CAAC;QAC3B;MACF,KAAK,CAAC;QACJC,wBAAwB,CAAC,CAAC;QAC1B;MACF,KAAK,CAAC;QACJC,4BAA4B,CAAC,CAAC;QAC9B;MACF,KAAK,CAAC;QACJC,4BAA4B,CAAC,CAAC;QAC9B;MACF,KAAK,CAAC;QACJQ,OAAO,CAACC,GAAG,CAAC,YAAYF,IAAI,CAACJ,KAAK,EAAE,CAAC;QAErC;MACF;QACEK,OAAO,CAACC,GAAG,CAAC,YAAYF,IAAI,CAACJ,KAAK,EAAE,CAAC;QACrC;IACJ;EACF,CAAC;EAED,OACEV,KAAA,CAACT,YAAY;IAAC0B,KAAK,EAAErB,YAAY,CAACsB,2BAA4B;IAAAC,QAAA,GAC5DrB,IAAA,CAACJ,SAAS;MAAC0B,QAAQ,EAAC,eAAe;MAACC,eAAe,EAAC;IAAS,CAAE,CAAC,EAGhErB,KAAA,CAACX,IAAI;MAAC4B,KAAK,EAAErB,YAAY,CAAC0B,wBAAyB;MAAAH,QAAA,GACjDrB,IAAA,CAACN,gBAAgB;QAAC+B,OAAO,EAAEpB,MAAO;QAACc,KAAK,EAAErB,YAAY,CAAC4B,4BAA6B;QAAAL,QAAA,EAClFrB,IAAA,CAACH,QAAQ;UAAC8B,IAAI,EAAC,YAAY;UAACC,IAAI,EAAE,EAAG;UAACd,KAAK,EAAC;QAAM,CAAE;MAAC,CACrC,CAAC,EACnBd,IAAA,CAACR,IAAI;QAAC2B,KAAK,EAAErB,YAAY,CAAC+B,uBAAwB;QAAAR,QAAA,EAAC;MAAmB,CAAM,CAAC,EAC7ErB,IAAA,CAACT,IAAI;QAAC4B,KAAK,EAAErB,YAAY,CAACgC;MAA+B,CAAE,CAAC;IAAA,CACxD,CAAC,EAGP9B,IAAA,CAACL,UAAU;MAACwB,KAAK,EAAErB,YAAY,CAACiC,yBAA0B;MAACC,4BAA4B,EAAE,KAAM;MAAAX,QAAA,EAC5FX,gBAAgB,CAACuB,GAAG,CAAC,UAACjB,IAAI;QAAA,OACzBd,KAAA,CAACR,gBAAgB;UAEfyB,KAAK,EAAErB,YAAY,CAACoC,sBAAuB;UAC3CT,OAAO,EAAE,SAATA,OAAOA,CAAA;YAAA,OAAQV,eAAe,CAACC,IAAI,CAAC;UAAA,CAAC;UAAAK,QAAA,GAErCnB,KAAA,CAACX,IAAI;YAAC4B,KAAK,EAAErB,YAAY,CAACqC,0BAA2B;YAAAd,QAAA,GACnDrB,IAAA,CAACT,IAAI;cAAC4B,KAAK,EAAE,CAACrB,YAAY,CAACsC,+BAA+B,EAAE;gBAAEb,eAAe,EAAEP,IAAI,CAACF;cAAM,CAAC,CAAE;cAAAO,QAAA,EAC3FrB,IAAA,CAACH,QAAQ;gBAAC8B,IAAI,EAAEX,IAAI,CAACH,IAAK;gBAACe,IAAI,EAAE,EAAG;gBAACd,KAAK,EAAC;cAAM,CAAE;YAAC,CAChD,CAAC,EACPd,IAAA,CAACR,IAAI;cAAC2B,KAAK,EAAErB,YAAY,CAACuC,0BAA2B;cAAAhB,QAAA,EAAEL,IAAI,CAACJ;YAAK,CAAO,CAAC;UAAA,CACrE,CAAC,EACPZ,IAAA,CAACH,QAAQ;YAAC8B,IAAI,EAAC,iBAAiB;YAACC,IAAI,EAAE,EAAG;YAACd,KAAK,EAAC;UAAS,CAAE,CAAC;QAAA,GAVxDE,IAAI,CAACL,EAWM,CAAC;MAAA,CACpB;IAAC,CACQ,CAAC,EAGbX,IAAA,CAACsC,KAAK;MACJC,OAAO,EAAEC,eAAgB;MACzBC,WAAW,EAAE,IAAK;MAClBC,aAAa,EAAC,MAAM;MACpBC,cAAc,EAAE,SAAhBA,cAAcA,CAAA;QAAA,OAAQC,kBAAkB,CAAC,KAAK,CAAC;MAAA,CAAC;MAAAvB,QAAA,EAEhDrB,IAAA,CAACT,IAAI;QAAC4B,KAAK,EAAErB,YAAY,CAAC+C,gBAAiB;QAAAxB,QAAA,EACzCnB,KAAA,CAACX,IAAI;UAAC4B,KAAK,EAAErB,YAAY,CAACgD,kBAAmB;UAAAzB,QAAA,GAC3CnB,KAAA,CAACX,IAAI;YAAC4B,KAAK,EAAErB,YAAY,CAACiD,eAAgB;YAAA1B,QAAA,GACxCrB,IAAA,CAACR,IAAI;cAAC2B,KAAK,EAAErB,YAAY,CAACkD,cAAe;cAAA3B,QAAA,EAAC;YAAa,CAAM,CAAC,EAC9DrB,IAAA,CAACN,gBAAgB;cACf+B,OAAO,EAAE,SAATA,OAAOA,CAAA;gBAAA,OAAQmB,kBAAkB,CAAC,KAAK,CAAC;cAAA,CAAC;cACzCzB,KAAK,EAAErB,YAAY,CAACmD,oBAAqB;cAAA5B,QAAA,EAEzCrB,IAAA,CAACH,QAAQ;gBAAC8B,IAAI,EAAC,OAAO;gBAACC,IAAI,EAAE,EAAG;gBAACd,KAAK,EAAC;cAAS,CAAE;YAAC,CACnC,CAAC;UAAA,CACf,CAAC,EACPd,IAAA,CAACT,IAAI;YAAC4B,KAAK,EAAErB,YAAY,CAACoD,gBAAiB;YAAA7B,QAAA,EACzCrB,IAAA,CAACT,IAAI;cAAC4B,KAAK,EAAErB,YAAY,CAACqD,gBAAiB;cAAA9B,QAAA,EACzCnB,KAAA,CAACV,IAAI;gBAAC2B,KAAK,EAAErB,YAAY,CAACsD,mBAAoB;gBAAA/B,QAAA,GAAC,0BACtB,EAACgC,iBAAiB,EAAC,mBAC5C;cAAA,CAAM;YAAC,CACH;UAAC,CACH,CAAC,EACPrD,IAAA,CAACT,IAAI;YAAC4B,KAAK,EAAErB,YAAY,CAACwD,eAAgB;YAAAjC,QAAA,EACxCrB,IAAA,CAACN,gBAAgB;cACf+B,OAAO,EAAE,SAATA,OAAOA,CAAA;gBAAA,OAAQmB,kBAAkB,CAAC,KAAK,CAAC;cAAA,CAAC;cACzCzB,KAAK,EAAErB,YAAY,CAACmD,oBAAqB;cAAA5B,QAAA,EAEzCrB,IAAA,CAACR,IAAI;gBAAC2B,KAAK,EAAErB,YAAY,CAACyD,wBAAyB;gBAAAlC,QAAA,EAAC;cAAK,CAAM;YAAC,CAChD;UAAC,CACf,CAAC;QAAA,CACH;MAAC,CACH;IAAC,CACF,CAAC;EAAA,CACI,CAAC;AAEnB,CAAC;AAED,eAAelB,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}