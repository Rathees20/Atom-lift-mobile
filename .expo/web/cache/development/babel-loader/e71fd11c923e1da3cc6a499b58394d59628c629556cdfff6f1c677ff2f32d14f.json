{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { globalStyles } from \"../styles/globalStyles\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddCustomerScreen = function AddCustomerScreen(_ref) {\n  var onBack = _ref.onBack,\n    onSave = _ref.onSave;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    customerSiteName = _useState2[0],\n    setCustomerSiteName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    mobileNumber = _useState4[0],\n    setMobileNumber = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    email = _useState6[0],\n    setEmail = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    customerSiteAddress = _useState8[0],\n    setCustomerSiteAddress = _useState8[1];\n  var handleSubmit = function handleSubmit() {\n    if (!customerSiteName.trim()) {\n      Alert.alert('Error', 'Please enter customer site name');\n      return;\n    }\n    if (!mobileNumber.trim()) {\n      Alert.alert('Error', 'Please enter mobile number');\n      return;\n    }\n    if (!email.trim()) {\n      Alert.alert('Error', 'Please enter email');\n      return;\n    }\n    if (!customerSiteAddress.trim()) {\n      Alert.alert('Error', 'Please enter customer site address');\n      return;\n    }\n    var emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      Alert.alert('Error', 'Please enter a valid email address');\n      return;\n    }\n    var mobileRegex = /^[0-9]{10}$/;\n    if (!mobileRegex.test(mobileNumber.replace(/\\s/g, ''))) {\n      Alert.alert('Error', 'Please enter a valid 10-digit mobile number');\n      return;\n    }\n    console.log('Customer data:', {\n      customerSiteName: customerSiteName,\n      mobileNumber: mobileNumber,\n      email: email,\n      customerSiteAddress: customerSiteAddress\n    });\n    Alert.alert('Success', 'Customer added successfully!', [{\n      text: 'OK',\n      onPress: onSave\n    }]);\n  };\n  return _jsxs(SafeAreaView, {\n    style: globalStyles.addCustomerContainer,\n    children: [_jsx(StatusBar, {\n      barStyle: \"light-content\",\n      backgroundColor: \"#3498db\"\n    }), _jsxs(View, {\n      style: globalStyles.addCustomerHeader,\n      children: [_jsx(TouchableOpacity, {\n        onPress: onBack,\n        style: globalStyles.addCustomerBackButton,\n        children: _jsx(Ionicons, {\n          name: \"arrow-back\",\n          size: 24,\n          color: \"#fff\"\n        })\n      }), _jsx(Text, {\n        style: globalStyles.addCustomerTitle,\n        children: \"Add Customer\"\n      }), _jsx(View, {\n        style: {\n          width: 24\n        }\n      })]\n    }), _jsxs(View, {\n      style: globalStyles.addCustomerContent,\n      children: [_jsx(View, {\n        style: globalStyles.addCustomerFieldContainer,\n        children: _jsx(TextInput, {\n          style: globalStyles.addCustomerInput,\n          placeholder: \"Customer Site Name\",\n          value: customerSiteName,\n          onChangeText: setCustomerSiteName,\n          placeholderTextColor: \"#999\"\n        })\n      }), _jsx(View, {\n        style: globalStyles.addCustomerFieldContainer,\n        children: _jsx(TextInput, {\n          style: globalStyles.addCustomerInput,\n          placeholder: \"Mobile Number\",\n          value: mobileNumber,\n          onChangeText: setMobileNumber,\n          keyboardType: \"phone-pad\",\n          placeholderTextColor: \"#999\"\n        })\n      }), _jsx(View, {\n        style: globalStyles.addCustomerFieldContainer,\n        children: _jsx(TextInput, {\n          style: globalStyles.addCustomerInput,\n          placeholder: \"Email\",\n          value: email,\n          onChangeText: setEmail,\n          keyboardType: \"email-address\",\n          autoCapitalize: \"none\",\n          placeholderTextColor: \"#999\"\n        })\n      }), _jsx(View, {\n        style: globalStyles.addCustomerFieldContainer,\n        children: _jsx(TextInput, {\n          style: [globalStyles.addCustomerInput, globalStyles.addCustomerTextArea],\n          placeholder: \"Customer Site Address\",\n          value: customerSiteAddress,\n          onChangeText: setCustomerSiteAddress,\n          multiline: true,\n          numberOfLines: 4,\n          textAlignVertical: \"top\",\n          placeholderTextColor: \"#999\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: globalStyles.addCustomerSubmitButton,\n        onPress: handleSubmit,\n        children: _jsx(Text, {\n          style: globalStyles.addCustomerSubmitButtonText,\n          children: \"Submit\"\n        })\n      })]\n    })]\n  });\n};\nexport default AddCustomerScreen;","map":{"version":3,"names":["React","useState","View","Text","SafeAreaView","TouchableOpacity","TextInput","StatusBar","Alert","Ionicons","globalStyles","jsx","_jsx","jsxs","_jsxs","AddCustomerScreen","_ref","onBack","onSave","_useState","_useState2","_slicedToArray","customerSiteName","setCustomerSiteName","_useState3","_useState4","mobileNumber","setMobileNumber","_useState5","_useState6","email","setEmail","_useState7","_useState8","customerSiteAddress","setCustomerSiteAddress","handleSubmit","trim","alert","emailRegex","test","mobileRegex","replace","console","log","text","onPress","style","addCustomerContainer","children","barStyle","backgroundColor","addCustomerHeader","addCustomerBackButton","name","size","color","addCustomerTitle","width","addCustomerContent","addCustomerFieldContainer","addCustomerInput","placeholder","value","onChangeText","placeholderTextColor","keyboardType","autoCapitalize","addCustomerTextArea","multiline","numberOfLines","textAlignVertical","addCustomerSubmitButton","addCustomerSubmitButtonText"],"sources":["D:/Download/Atom lift mobile app/src/screens/AddCustomerScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  StatusBar,\r\n  Alert,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { globalStyles } from '../styles/globalStyles';\r\n\r\ninterface AddCustomerScreenProps {\r\n  onBack: () => void;\r\n  onSave: () => void;\r\n}\r\n\r\nconst AddCustomerScreen: React.FC<AddCustomerScreenProps> = ({ onBack, onSave }) => {\r\n  const [customerSiteName, setCustomerSiteName] = useState<string>('');\r\n  const [mobileNumber, setMobileNumber] = useState<string>('');\r\n  const [email, setEmail] = useState<string>('');\r\n  const [customerSiteAddress, setCustomerSiteAddress] = useState<string>('');\r\n\r\n  const handleSubmit = (): void => {\r\n    // Basic validation\r\n    if (!customerSiteName.trim()) {\r\n      Alert.alert('Error', 'Please enter customer site name');\r\n      return;\r\n    }\r\n    if (!mobileNumber.trim()) {\r\n      Alert.alert('Error', 'Please enter mobile number');\r\n      return;\r\n    }\r\n    if (!email.trim()) {\r\n      Alert.alert('Error', 'Please enter email');\r\n      return;\r\n    }\r\n    if (!customerSiteAddress.trim()) {\r\n      Alert.alert('Error', 'Please enter customer site address');\r\n      return;\r\n    }\r\n\r\n    // Email validation\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email)) {\r\n      Alert.alert('Error', 'Please enter a valid email address');\r\n      return;\r\n    }\r\n\r\n    // Mobile number validation (basic)\r\n    const mobileRegex = /^[0-9]{10}$/;\r\n    if (!mobileRegex.test(mobileNumber.replace(/\\s/g, ''))) {\r\n      Alert.alert('Error', 'Please enter a valid 10-digit mobile number');\r\n      return;\r\n    }\r\n\r\n    console.log('Customer data:', {\r\n      customerSiteName,\r\n      mobileNumber,\r\n      email,\r\n      customerSiteAddress,\r\n    });\r\n\r\n    Alert.alert('Success', 'Customer added successfully!', [\r\n      {\r\n        text: 'OK',\r\n        onPress: onSave,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={globalStyles.addCustomerContainer}>\r\n      <StatusBar barStyle=\"light-content\" backgroundColor=\"#3498db\" />\r\n      \r\n      {/* Header */}\r\n      <View style={globalStyles.addCustomerHeader}>\r\n        <TouchableOpacity onPress={onBack} style={globalStyles.addCustomerBackButton}>\r\n          <Ionicons name=\"arrow-back\" size={24} color=\"#fff\" />\r\n        </TouchableOpacity>\r\n        <Text style={globalStyles.addCustomerTitle}>Add Customer</Text>\r\n        <View style={{ width: 24 }} />\r\n      </View>\r\n\r\n      {/* Content */}\r\n      <View style={globalStyles.addCustomerContent}>\r\n        {/* Customer Site Name */}\r\n        <View style={globalStyles.addCustomerFieldContainer}>\r\n          <TextInput\r\n            style={globalStyles.addCustomerInput}\r\n            placeholder=\"Customer Site Name\"\r\n            value={customerSiteName}\r\n            onChangeText={setCustomerSiteName}\r\n            placeholderTextColor=\"#999\"\r\n          />\r\n        </View>\r\n\r\n        {/* Mobile Number */}\r\n        <View style={globalStyles.addCustomerFieldContainer}>\r\n          <TextInput\r\n            style={globalStyles.addCustomerInput}\r\n            placeholder=\"Mobile Number\"\r\n            value={mobileNumber}\r\n            onChangeText={setMobileNumber}\r\n            keyboardType=\"phone-pad\"\r\n            placeholderTextColor=\"#999\"\r\n          />\r\n        </View>\r\n\r\n        {/* Email */}\r\n        <View style={globalStyles.addCustomerFieldContainer}>\r\n          <TextInput\r\n            style={globalStyles.addCustomerInput}\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChangeText={setEmail}\r\n            keyboardType=\"email-address\"\r\n            autoCapitalize=\"none\"\r\n            placeholderTextColor=\"#999\"\r\n          />\r\n        </View>\r\n\r\n        {/* Customer Site Address */}\r\n        <View style={globalStyles.addCustomerFieldContainer}>\r\n          <TextInput\r\n            style={[globalStyles.addCustomerInput, globalStyles.addCustomerTextArea]}\r\n            placeholder=\"Customer Site Address\"\r\n            value={customerSiteAddress}\r\n            onChangeText={setCustomerSiteAddress}\r\n            multiline\r\n            numberOfLines={4}\r\n            textAlignVertical=\"top\"\r\n            placeholderTextColor=\"#999\"\r\n          />\r\n        </View>\r\n\r\n        {/* Submit Button */}\r\n        <TouchableOpacity style={globalStyles.addCustomerSubmitButton} onPress={handleSubmit}>\r\n          <Text style={globalStyles.addCustomerSubmitButtonText}>Submit</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default AddCustomerScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}