{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { globalStyles } from \"../styles/globalStyles\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RoutineMaintenanceScreen = function RoutineMaintenanceScreen(_ref) {\n  var onBack = _ref.onBack;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showNoDataModal = _useState2[0],\n    setShowNoDataModal = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedItemTitle = _useState4[0],\n    setSelectedItemTitle = _useState4[1];\n  var maintenanceItems = [{\n    id: 1,\n    title: \"Today's Services\",\n    icon: 'settings-outline',\n    color: '#3498db'\n  }, {\n    id: 2,\n    title: 'This Month Due',\n    icon: 'settings-outline',\n    color: '#3498db'\n  }, {\n    id: 3,\n    title: 'This Month Overdue',\n    icon: 'settings-outline',\n    color: '#3498db'\n  }, {\n    id: 4,\n    title: 'Last Month Overdue',\n    icon: 'settings-outline',\n    color: '#3498db'\n  }, {\n    id: 5,\n    title: 'More Filter',\n    icon: 'settings-outline',\n    color: '#3498db'\n  }];\n  var handleItemPress = function handleItemPress(item) {\n    if (item.id <= 4) {\n      setSelectedItemTitle(item.title);\n      setShowNoDataModal(true);\n    } else {\n      console.log(`Pressed: ${item.title}`);\n    }\n  };\n  return _jsxs(SafeAreaView, {\n    style: globalStyles.routineMaintenanceContainer,\n    children: [_jsx(StatusBar, {\n      barStyle: \"light-content\",\n      backgroundColor: \"#3498db\"\n    }), _jsxs(View, {\n      style: globalStyles.routineMaintenanceHeader,\n      children: [_jsx(TouchableOpacity, {\n        onPress: onBack,\n        style: globalStyles.routineMaintenanceBackButton,\n        children: _jsx(Ionicons, {\n          name: \"arrow-back\",\n          size: 24,\n          color: \"#fff\"\n        })\n      }), _jsx(Text, {\n        style: globalStyles.routineMaintenanceTitle,\n        children: \"Routine Maintenance\"\n      }), _jsx(View, {\n        style: globalStyles.routineMaintenanceHeaderSpacer\n      })]\n    }), _jsx(ScrollView, {\n      style: globalStyles.routineMaintenanceContent,\n      showsVerticalScrollIndicator: false,\n      children: maintenanceItems.map(function (item) {\n        return _jsxs(TouchableOpacity, {\n          style: globalStyles.routineMaintenanceItem,\n          onPress: function onPress() {\n            return handleItemPress(item);\n          },\n          children: [_jsxs(View, {\n            style: globalStyles.routineMaintenanceItemLeft,\n            children: [_jsx(View, {\n              style: [globalStyles.routineMaintenanceIconContainer, {\n                backgroundColor: item.color\n              }],\n              children: _jsx(Ionicons, {\n                name: item.icon,\n                size: 24,\n                color: \"#fff\"\n              })\n            }), _jsx(Text, {\n              style: globalStyles.routineMaintenanceItemText,\n              children: item.title\n            })]\n          }), _jsx(Ionicons, {\n            name: \"chevron-forward\",\n            size: 20,\n            color: \"#2c3e50\"\n          })]\n        }, item.id);\n      })\n    })]\n  });\n};\nexport default RoutineMaintenanceScreen;","map":{"version":3,"names":["React","useState","View","Text","SafeAreaView","TouchableOpacity","ScrollView","StatusBar","Ionicons","globalStyles","jsx","_jsx","jsxs","_jsxs","RoutineMaintenanceScreen","_ref","onBack","_useState","_useState2","_slicedToArray","showNoDataModal","setShowNoDataModal","_useState3","_useState4","selectedItemTitle","setSelectedItemTitle","maintenanceItems","id","title","icon","color","handleItemPress","item","console","log","style","routineMaintenanceContainer","children","barStyle","backgroundColor","routineMaintenanceHeader","onPress","routineMaintenanceBackButton","name","size","routineMaintenanceTitle","routineMaintenanceHeaderSpacer","routineMaintenanceContent","showsVerticalScrollIndicator","map","routineMaintenanceItem","routineMaintenanceItemLeft","routineMaintenanceIconContainer","routineMaintenanceItemText"],"sources":["D:/Download/Atom lift mobile app/src/screens/RoutineMaintenanceScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  StatusBar,\r\n  Modal,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { globalStyles } from '../styles/globalStyles';\r\n\r\ninterface RoutineMaintenanceScreenProps {\r\n  onBack: () => void;\r\n}\r\n\r\ninterface MaintenanceItem {\r\n  id: number;\r\n  title: string;\r\n  icon: keyof typeof import('@expo/vector-icons').Ionicons.glyphMap;\r\n  color: string;\r\n}\r\n\r\nconst RoutineMaintenanceScreen: React.FC<RoutineMaintenanceScreenProps> = ({ onBack }) => {\r\n  const [showNoDataModal, setShowNoDataModal] = useState(false);\r\n  const [selectedItemTitle, setSelectedItemTitle] = useState('');\r\n\r\n  const maintenanceItems: MaintenanceItem[] = [\r\n    {\r\n      id: 1,\r\n      title: \"Today's Services\",\r\n      icon: 'settings-outline' as const,\r\n      color: '#3498db',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'This Month Due',\r\n      icon: 'settings-outline' as const,\r\n      color: '#3498db',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'This Month Overdue',\r\n      icon: 'settings-outline' as const,\r\n      color: '#3498db',\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Last Month Overdue',\r\n      icon: 'settings-outline' as const,\r\n      color: '#3498db',\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'More Filter',\r\n      icon: 'settings-outline' as const,\r\n      color: '#3498db',\r\n    },\r\n  ];\r\n\r\n  const handleItemPress = (item: MaintenanceItem): void => {\r\n    // Show \"No data found\" for first four items\r\n    if (item.id <= 4) {\r\n      setSelectedItemTitle(item.title);\r\n      setShowNoDataModal(true);\r\n    } else {\r\n      console.log(`Pressed: ${item.title}`);\r\n      // Add navigation logic here for other maintenance categories\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={globalStyles.routineMaintenanceContainer}>\r\n      <StatusBar barStyle=\"light-content\" backgroundColor=\"#3498db\" />\r\n      \r\n      {/* Header */}\r\n      <View style={globalStyles.routineMaintenanceHeader}>\r\n        <TouchableOpacity onPress={onBack} style={globalStyles.routineMaintenanceBackButton}>\r\n          <Ionicons name=\"arrow-back\" size={24} color=\"#fff\" />\r\n        </TouchableOpacity>\r\n        <Text style={globalStyles.routineMaintenanceTitle}>Routine Maintenance</Text>\r\n        <View style={globalStyles.routineMaintenanceHeaderSpacer} />\r\n      </View>\r\n\r\n      {/* Content */}\r\n      <ScrollView style={globalStyles.routineMaintenanceContent} showsVerticalScrollIndicator={false}>\r\n        {maintenanceItems.map((item) => (\r\n          <TouchableOpacity\r\n            key={item.id}\r\n            style={globalStyles.routineMaintenanceItem}\r\n            onPress={() => handleItemPress(item)}\r\n          >\r\n            <View style={globalStyles.routineMaintenanceItemLeft}>\r\n              <View style={[globalStyles.routineMaintenanceIconContainer, { backgroundColor: item.color }]}>\r\n                <Ionicons name={item.icon} size={24} color=\"#fff\" />\r\n              </View>\r\n              <Text style={globalStyles.routineMaintenanceItemText}>{item.title}</Text>\r\n            </View>\r\n            <Ionicons name=\"chevron-forward\" size={20} color=\"#2c3e50\" />\r\n          </TouchableOpacity>\r\n        ))}\r\n      </ScrollView>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nexport default RoutineMaintenanceScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}