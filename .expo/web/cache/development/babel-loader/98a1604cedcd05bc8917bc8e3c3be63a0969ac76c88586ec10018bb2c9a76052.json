{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport LoginScreen from \"./src/screens/LoginScreen\";\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport { Fragment as _Fragment, jsx as _jsx } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoggedIn = _useState2[0],\n    setIsLoggedIn = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setIsLoading = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    userMobileNumber = _useState6[0],\n    setUserMobileNumber = _useState6[1];\n  useEffect(function () {\n    checkLoginStatus();\n  }, []);\n  var checkLoginStatus = function checkLoginStatus() {\n    try {\n      var _localStorage, _sessionStorage, _localStorage2, _sessionStorage2;\n      var loginStatus = ((_localStorage = localStorage) == null ? void 0 : _localStorage.getItem('isLoggedIn')) || ((_sessionStorage = sessionStorage) == null ? void 0 : _sessionStorage.getItem('isLoggedIn'));\n      var mobileNumber = ((_localStorage2 = localStorage) == null ? void 0 : _localStorage2.getItem('userMobileNumber')) || ((_sessionStorage2 = sessionStorage) == null ? void 0 : _sessionStorage2.getItem('userMobileNumber'));\n      if (loginStatus === 'true') {\n        setIsLoggedIn(true);\n        if (mobileNumber) {\n          setUserMobileNumber(mobileNumber);\n        }\n      }\n    } catch (error) {\n      console.log('Error checking login status:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  var handleLogin = function handleLogin(mobileNumber) {\n    try {\n      if (typeof localStorage !== 'undefined') {\n        localStorage.setItem('isLoggedIn', 'true');\n        localStorage.setItem('userMobileNumber', mobileNumber);\n      }\n      if (typeof sessionStorage !== 'undefined') {\n        sessionStorage.setItem('isLoggedIn', 'true');\n        sessionStorage.setItem('userMobileNumber', mobileNumber);\n      }\n      setUserMobileNumber(mobileNumber);\n      setIsLoggedIn(true);\n    } catch (error) {\n      console.log('Error saving login status:', error);\n    }\n  };\n  var handleLogout = function handleLogout() {\n    try {\n      if (typeof localStorage !== 'undefined') {\n        localStorage.removeItem('isLoggedIn');\n        localStorage.removeItem('userMobileNumber');\n      }\n      if (typeof sessionStorage !== 'undefined') {\n        sessionStorage.removeItem('isLoggedIn');\n        sessionStorage.removeItem('userMobileNumber');\n      }\n      setUserMobileNumber('');\n      setIsLoggedIn(false);\n    } catch (error) {\n      console.log('Error removing login status:', error);\n    }\n  };\n  if (isLoading) {\n    return _jsx(_Fragment, {});\n  }\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: !isLoggedIn ? _jsx(Stack.Screen, {\n        name: \"Login\",\n        children: function children(props) {\n          return _jsx(LoginScreen, _objectSpread(_objectSpread({}, props), {}, {\n            onLogin: handleLogin\n          }));\n        }\n      }) : _jsx(Stack.Screen, {\n        name: \"Home\",\n        children: function children(props) {\n          return _jsx(HomeScreen, _objectSpread(_objectSpread({}, props), {}, {\n            onLogout: handleLogout,\n            mobileNumber: userMobileNumber\n          }));\n        }\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","NavigationContainer","createStackNavigator","LoginScreen","HomeScreen","Fragment","_Fragment","jsx","_jsx","Stack","App","_useState","_useState2","_slicedToArray","isLoggedIn","setIsLoggedIn","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","userMobileNumber","setUserMobileNumber","checkLoginStatus","_localStorage","_sessionStorage","_localStorage2","_sessionStorage2","loginStatus","localStorage","getItem","sessionStorage","mobileNumber","error","console","log","handleLogin","setItem","handleLogout","removeItem","children","Navigator","screenOptions","headerShown","Screen","name","props","_objectSpread","onLogin","onLogout"],"sources":["D:/Download/Atom lift mobile app/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport LoginScreen from './src/screens/LoginScreen';\nimport HomeScreen from './src/screens/HomeScreen';\nimport { RootStackParamList } from './types';\n\nconst Stack = createStackNavigator<RootStackParamList>();\n\nexport default function App(): JSX.Element {\n  const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [userMobileNumber, setUserMobileNumber] = useState<string>('');\n\n  useEffect(() => {\n    // Check if user is already logged in from localStorage (for web) or sessionStorage\n    checkLoginStatus();\n  }, []);\n\n  const checkLoginStatus = (): void => {\n    try {\n      // Try localStorage first (for web), then sessionStorage\n      const loginStatus = localStorage?.getItem('isLoggedIn') || sessionStorage?.getItem('isLoggedIn');\n      const mobileNumber = localStorage?.getItem('userMobileNumber') || sessionStorage?.getItem('userMobileNumber');\n      if (loginStatus === 'true') {\n        setIsLoggedIn(true);\n        if (mobileNumber) {\n          setUserMobileNumber(mobileNumber);\n        }\n      }\n    } catch (error) {\n      console.log('Error checking login status:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleLogin = (mobileNumber: string): void => {\n    try {\n      // Save to both localStorage and sessionStorage for persistence\n      if (typeof localStorage !== 'undefined') {\n        localStorage.setItem('isLoggedIn', 'true');\n        localStorage.setItem('userMobileNumber', mobileNumber);\n      }\n      if (typeof sessionStorage !== 'undefined') {\n        sessionStorage.setItem('isLoggedIn', 'true');\n        sessionStorage.setItem('userMobileNumber', mobileNumber);\n      }\n      setUserMobileNumber(mobileNumber);\n      setIsLoggedIn(true);\n    } catch (error) {\n      console.log('Error saving login status:', error);\n    }\n  };\n\n  const handleLogout = (): void => {\n    try {\n      // Remove from both localStorage and sessionStorage\n      if (typeof localStorage !== 'undefined') {\n        localStorage.removeItem('isLoggedIn');\n        localStorage.removeItem('userMobileNumber');\n      }\n      if (typeof sessionStorage !== 'undefined') {\n        sessionStorage.removeItem('isLoggedIn');\n        sessionStorage.removeItem('userMobileNumber');\n      }\n      setUserMobileNumber('');\n      setIsLoggedIn(false);\n    } catch (error) {\n      console.log('Error removing login status:', error);\n    }\n  };\n\n  // Show loading screen while checking login status\n  if (isLoading) {\n    return <></>; // Empty fragment while loading\n  }\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\n        {!isLoggedIn ? (\n          <Stack.Screen name=\"Login\">\n            {(props) => <LoginScreen {...props} onLogin={handleLogin} />}\n          </Stack.Screen>\n        ) : (\n          <Stack.Screen name=\"Home\">\n            {(props) => <HomeScreen {...props} onLogout={handleLogout} mobileNumber={userMobileNumber} />}\n          </Stack.Screen>\n        )}\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}