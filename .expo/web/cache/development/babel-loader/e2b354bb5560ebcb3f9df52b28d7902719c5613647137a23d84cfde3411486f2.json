{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Ionicons } from '@expo/vector-icons';\nimport CustomDrawer from \"../components/CustomDrawer\";\nimport AddComplaintScreen from \"./AddComplaintScreen\";\nimport MaterialRequisitionScreen from \"./MaterialRequisitionScreen\";\nimport LeaveListScreen from \"./LeaveListScreen\";\nimport LeaveScreen from \"./LeaveScreen\";\nimport TravellingListScreen from \"./TravellingListScreen\";\nimport TravellingScreen from \"./TravellingScreen\";\nimport AddCustomerScreen from \"./AddCustomerScreen\";\nimport CreateAMCScreen from \"./CreateAMCScreen\";\nimport ViewAttendanceScreen from \"./ViewAttendanceScreen\";\nimport RoutineMaintenanceScreen from \"./RoutineMaintenanceScreen\";\nimport AMCListScreen from \"./AMCListScreen\";\nimport TipsModal from \"../components/TipsModal\";\nimport { globalStyles } from \"../styles/globalStyles\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var onLogout = _ref.onLogout;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isDrawerOpen = _useState2[0],\n    setIsDrawerOpen = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showComplaintScreen = _useState4[0],\n    setShowComplaintScreen = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showMaterialRequisitionScreen = _useState6[0],\n    setShowMaterialRequisitionScreen = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showLeaveListScreen = _useState8[0],\n    setShowLeaveListScreen = _useState8[1];\n  var _useState9 = useState(false),\n    _useState0 = _slicedToArray(_useState9, 2),\n    showLeaveScreen = _useState0[0],\n    setShowLeaveScreen = _useState0[1];\n  var _useState1 = useState(false),\n    _useState10 = _slicedToArray(_useState1, 2),\n    showTravellingListScreen = _useState10[0],\n    setShowTravellingListScreen = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    showTravellingScreen = _useState12[0],\n    setShowTravellingScreen = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    showAddCustomerScreen = _useState14[0],\n    setShowAddCustomerScreen = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    showCreateAMCScreen = _useState16[0],\n    setShowCreateAMCScreen = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    showViewAttendanceScreen = _useState18[0],\n    setShowViewAttendanceScreen = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    showRoutineMaintenanceScreen = _useState20[0],\n    setShowRoutineMaintenanceScreen = _useState20[1];\n  var _useState21 = useState(false),\n    _useState22 = _slicedToArray(_useState21, 2),\n    showAMCListScreen = _useState22[0],\n    setShowAMCListScreen = _useState22[1];\n  var _useState23 = useState(false),\n    _useState24 = _slicedToArray(_useState23, 2),\n    showCustomersScreen = _useState24[0],\n    setShowCustomersScreen = _useState24[1];\n  var _useState25 = useState(false),\n    _useState26 = _slicedToArray(_useState25, 2),\n    showTipsModal = _useState26[0],\n    setShowTipsModal = _useState26[1];\n  var _useState27 = useState(false),\n    _useState28 = _slicedToArray(_useState27, 2),\n    showWorkCheckModal = _useState28[0],\n    setShowWorkCheckModal = _useState28[1];\n  var _useState29 = useState(''),\n    _useState30 = _slicedToArray(_useState29, 2),\n    workCheckNote = _useState30[0],\n    setWorkCheckNote = _useState30[1];\n  var _Dimensions$get = Dimensions.get('window'),\n    width = _Dimensions$get.width;\n  var menuItems = [{\n    id: 1,\n    title: 'Tickets',\n    icon: 'list-outline',\n    color: '#3498db'\n  }, {\n    id: 2,\n    title: 'Routine Services',\n    icon: 'settings-outline',\n    color: '#3498db'\n  }, {\n    id: 3,\n    title: 'Customers',\n    icon: 'people-outline',\n    color: '#3498db'\n  }, {\n    id: 4,\n    title: 'AMC',\n    icon: 'calendar-outline',\n    color: '#9b59b6'\n  }];\n  var handleMenuPress = function handleMenuPress(item) {\n    console.log(`Pressed: ${item.title}`);\n    if (item.title === 'Routine Services') {\n      setShowRoutineMaintenanceScreen(true);\n    } else if (item.title === 'AMC') {\n      setShowAMCListScreen(true);\n    } else if (item.title === 'Customers') {\n      setShowCustomersScreen(true);\n    }\n  };\n  var handleMarkAttendance = function handleMarkAttendance() {\n    console.log('Mark Attendance In pressed');\n  };\n  var handleWorkCheckIn = function handleWorkCheckIn() {\n    console.log('Work Check In pressed');\n    setShowWorkCheckModal(true);\n  };\n  var toggleDrawer = function toggleDrawer() {\n    setIsDrawerOpen(!isDrawerOpen);\n  };\n  var closeDrawer = function closeDrawer() {\n    setIsDrawerOpen(false);\n  };\n  var handleNavigateToComplaint = function handleNavigateToComplaint() {\n    setShowComplaintScreen(true);\n  };\n  var handleBackFromComplaint = function handleBackFromComplaint() {\n    setShowComplaintScreen(false);\n  };\n  var handleSaveComplaint = function handleSaveComplaint() {\n    console.log('Complaint saved successfully');\n    setShowComplaintScreen(false);\n  };\n  var handleNavigateToMaterialRequisition = function handleNavigateToMaterialRequisition() {\n    setShowMaterialRequisitionScreen(true);\n  };\n  var handleBackFromMaterialRequisition = function handleBackFromMaterialRequisition() {\n    setShowMaterialRequisitionScreen(false);\n  };\n  var handleSaveMaterialRequisition = function handleSaveMaterialRequisition() {\n    console.log('Material requisition saved successfully');\n    setShowMaterialRequisitionScreen(false);\n  };\n  var handleNavigateToLeave = function handleNavigateToLeave() {\n    setShowLeaveListScreen(true);\n  };\n  var handleBackFromLeaveList = function handleBackFromLeaveList() {\n    setShowLeaveListScreen(false);\n  };\n  var handleAddNewLeave = function handleAddNewLeave() {\n    console.log('handleAddNewLeave called - setting showLeaveScreen to true');\n    setShowLeaveScreen(true);\n  };\n  var handleBackFromLeave = function handleBackFromLeave() {\n    console.log('handleBackFromLeave called - going back to leave list');\n    setShowLeaveScreen(false);\n  };\n  var handleApplyLeave = function handleApplyLeave() {\n    console.log('Leave applied successfully');\n    setShowLeaveScreen(false);\n    setShowLeaveListScreen(false);\n  };\n  var handleNavigateToTravelling = function handleNavigateToTravelling() {\n    setShowTravellingListScreen(true);\n  };\n  var handleBackFromTravellingList = function handleBackFromTravellingList() {\n    setShowTravellingListScreen(false);\n  };\n  var handleAddNewTravelling = function handleAddNewTravelling() {\n    console.log('handleAddNewTravelling called - setting showTravellingScreen to true');\n    setShowTravellingScreen(true);\n  };\n  var handleBackFromTravelling = function handleBackFromTravelling() {\n    console.log('handleBackFromTravelling called - going back to travelling list');\n    setShowTravellingScreen(false);\n  };\n  var handleApplyTravelling = function handleApplyTravelling() {\n    console.log('Travelling applied successfully');\n    setShowTravellingScreen(false);\n    setShowTravellingListScreen(false);\n  };\n  var handleNavigateToAddCustomer = function handleNavigateToAddCustomer() {\n    setShowAddCustomerScreen(true);\n  };\n  var handleBackFromAddCustomer = function handleBackFromAddCustomer() {\n    setShowAddCustomerScreen(false);\n  };\n  var handleSaveCustomer = function handleSaveCustomer() {\n    console.log('Customer saved successfully');\n    setShowAddCustomerScreen(false);\n  };\n  var handleNavigateToCreateAMC = function handleNavigateToCreateAMC() {\n    setShowCreateAMCScreen(true);\n  };\n  var handleBackFromCreateAMC = function handleBackFromCreateAMC() {\n    setShowCreateAMCScreen(false);\n  };\n  var handleSaveAMC = function handleSaveAMC() {\n    console.log('AMC created successfully');\n    setShowCreateAMCScreen(false);\n  };\n  var handleNavigateToViewAttendance = function handleNavigateToViewAttendance() {\n    setShowViewAttendanceScreen(true);\n  };\n  var handleBackFromViewAttendance = function handleBackFromViewAttendance() {\n    setShowViewAttendanceScreen(false);\n  };\n  var handleBackFromRoutineMaintenance = function handleBackFromRoutineMaintenance() {\n    setShowRoutineMaintenanceScreen(false);\n  };\n  var handleBackFromAMCList = function handleBackFromAMCList() {\n    setShowAMCListScreen(false);\n  };\n  var handleBackFromCustomers = function handleBackFromCustomers() {\n    setShowCustomersScreen(false);\n  };\n  var handleShowTips = function handleShowTips() {\n    setShowTipsModal(true);\n  };\n  var handleCloseTips = function handleCloseTips() {\n    setShowTipsModal(false);\n  };\n  var handleCloseWorkCheckModal = function handleCloseWorkCheckModal() {\n    setShowWorkCheckModal(false);\n    setWorkCheckNote('');\n  };\n  var handleSubmitWorkCheck = function handleSubmitWorkCheck() {\n    console.log('Work Check submitted with note:', workCheckNote);\n    setShowWorkCheckModal(false);\n    setWorkCheckNote('');\n  };\n  if (showComplaintScreen) {\n    return _jsx(AddComplaintScreen, {\n      onBack: handleBackFromComplaint,\n      onSave: handleSaveComplaint\n    });\n  }\n  if (showMaterialRequisitionScreen) {\n    return _jsx(MaterialRequisitionScreen, {\n      onBack: handleBackFromMaterialRequisition,\n      onSave: handleSaveMaterialRequisition\n    });\n  }\n  if (showLeaveScreen) {\n    console.log('Rendering LeaveScreen');\n    return _jsx(LeaveScreen, {\n      onBack: handleBackFromLeave,\n      onApplyLeave: handleApplyLeave\n    });\n  }\n  if (showLeaveListScreen) {\n    return _jsx(LeaveListScreen, {\n      onBack: handleBackFromLeaveList,\n      onAddNew: handleAddNewLeave\n    });\n  }\n  if (showTravellingScreen) {\n    console.log('Rendering TravellingScreen');\n    return _jsx(TravellingScreen, {\n      onBack: handleBackFromTravelling,\n      onApplyTravelling: handleApplyTravelling\n    });\n  }\n  if (showTravellingListScreen) {\n    return _jsx(TravellingListScreen, {\n      onBack: handleBackFromTravellingList,\n      onAddNew: handleAddNewTravelling\n    });\n  }\n  if (showAddCustomerScreen) {\n    return _jsx(AddCustomerScreen, {\n      onBack: handleBackFromAddCustomer,\n      onSave: handleSaveCustomer\n    });\n  }\n  if (showCreateAMCScreen) {\n    return _jsx(CreateAMCScreen, {\n      onBack: handleBackFromCreateAMC,\n      onSave: handleSaveAMC\n    });\n  }\n  if (showViewAttendanceScreen) {\n    return _jsx(ViewAttendanceScreen, {\n      onBack: handleBackFromViewAttendance\n    });\n  }\n  if (showRoutineMaintenanceScreen) {\n    return _jsx(RoutineMaintenanceScreen, {\n      onBack: handleBackFromRoutineMaintenance\n    });\n  }\n  if (showAMCListScreen) {\n    return _jsx(AMCListScreen, {\n      onBack: handleBackFromAMCList\n    });\n  }\n  return _jsxs(SafeAreaView, {\n    style: globalStyles.homeContainer,\n    children: [_jsx(StatusBar, {\n      barStyle: \"light-content\",\n      backgroundColor: \"#3498db\"\n    }), _jsx(View, {\n      style: globalStyles.homeHeader,\n      children: _jsx(View, {\n        style: globalStyles.homeHeaderBottom,\n        children: _jsx(TouchableOpacity, {\n          onPress: toggleDrawer,\n          children: _jsx(Ionicons, {\n            name: \"menu\",\n            size: 24,\n            color: \"#fff\"\n          })\n        })\n      })\n    }), _jsxs(ScrollView, {\n      style: globalStyles.homeContent,\n      showsVerticalScrollIndicator: false,\n      children: [_jsx(View, {\n        style: globalStyles.homeMenuGrid,\n        children: menuItems.map(function (item) {\n          return _jsxs(TouchableOpacity, {\n            style: globalStyles.homeMenuCard,\n            onPress: function onPress() {\n              return handleMenuPress(item);\n            },\n            children: [_jsx(View, {\n              style: [globalStyles.homeIconContainer, {\n                backgroundColor: item.color\n              }],\n              children: _jsx(Ionicons, {\n                name: item.icon,\n                size: 32,\n                color: \"#fff\"\n              })\n            }), _jsx(Text, {\n              style: globalStyles.homeMenuTitle,\n              children: item.title\n            })]\n          }, item.id);\n        })\n      }), _jsxs(View, {\n        style: globalStyles.homeActionButtons,\n        children: [_jsx(TouchableOpacity, {\n          style: globalStyles.homeActionButton,\n          onPress: handleMarkAttendance,\n          children: _jsx(Text, {\n            style: globalStyles.homeActionButtonText,\n            children: \"Mark Attendance In\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: globalStyles.homeActionButton,\n          onPress: handleWorkCheckIn,\n          children: _jsx(Text, {\n            style: globalStyles.homeActionButtonText,\n            children: \"Work Check In\"\n          })\n        })]\n      }), _jsxs(View, {\n        style: globalStyles.homeStatusContainer,\n        children: [_jsx(Text, {\n          style: globalStyles.homeStatusText,\n          children: \"Last Check In: null || null ||\"\n        }), _jsx(Ionicons, {\n          name: \"location-outline\",\n          size: 16,\n          color: \"#3498db\"\n        })]\n      })]\n    }), _jsx(Modal, {\n      visible: isDrawerOpen,\n      animationType: \"slide\",\n      transparent: true,\n      onRequestClose: closeDrawer,\n      children: _jsxs(View, {\n        style: globalStyles.homeModalOverlay,\n        children: [_jsx(View, {\n          style: [globalStyles.homeDrawerContainer, {\n            width: width * 0.85\n          }],\n          children: _jsx(CustomDrawer, {\n            onClose: closeDrawer,\n            onLogout: onLogout,\n            onNavigateToComplaint: handleNavigateToComplaint,\n            onNavigateToMaterialRequisition: handleNavigateToMaterialRequisition,\n            onNavigateToLeave: handleNavigateToLeave,\n            onNavigateToTravelling: handleNavigateToTravelling,\n            onNavigateToAddCustomer: handleNavigateToAddCustomer,\n            onNavigateToCreateAMC: handleNavigateToCreateAMC,\n            onNavigateToViewAttendance: handleNavigateToViewAttendance,\n            onShowTips: handleShowTips\n          })\n        }), _jsx(TouchableOpacity, {\n          style: globalStyles.homeModalBackdrop,\n          activeOpacity: 1,\n          onPress: closeDrawer\n        })]\n      })\n    }), _jsx(TipsModal, {\n      visible: showTipsModal,\n      onClose: handleCloseTips\n    }), _jsx(Modal, {\n      visible: showWorkCheckModal,\n      animationType: \"fade\",\n      transparent: true,\n      onRequestClose: handleCloseWorkCheckModal,\n      children: _jsx(View, {\n        style: globalStyles.workCheckModalOverlay,\n        children: _jsxs(View, {\n          style: globalStyles.workCheckModalContainer,\n          children: [_jsx(Text, {\n            style: globalStyles.workCheckModalTitle,\n            children: \"Note\"\n          }), _jsx(TextInput, {\n            style: globalStyles.workCheckModalInput,\n            placeholder: \"type note here...\",\n            placeholderTextColor: \"#999\",\n            value: workCheckNote,\n            onChangeText: setWorkCheckNote,\n            multiline: true,\n            textAlignVertical: \"top\"\n          }), _jsxs(View, {\n            style: globalStyles.workCheckModalButtons,\n            children: [_jsx(TouchableOpacity, {\n              style: globalStyles.workCheckCloseButton,\n              onPress: handleCloseWorkCheckModal,\n              children: _jsx(Text, {\n                style: globalStyles.workCheckCloseButtonText,\n                children: \"CLOSE\"\n              })\n            }), _jsx(TouchableOpacity, {\n              style: globalStyles.workCheckSubmitButton,\n              onPress: handleSubmitWorkCheck,\n              children: _jsx(Text, {\n                style: globalStyles.workCheckSubmitButtonText,\n                children: \"WORK CHECK\"\n              })\n            })]\n          })]\n        })\n      })\n    })]\n  });\n};\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","View","Text","SafeAreaView","TouchableOpacity","ScrollView","StatusBar","Modal","Dimensions","TextInput","Ionicons","CustomDrawer","AddComplaintScreen","MaterialRequisitionScreen","LeaveListScreen","LeaveScreen","TravellingListScreen","TravellingScreen","AddCustomerScreen","CreateAMCScreen","ViewAttendanceScreen","RoutineMaintenanceScreen","AMCListScreen","TipsModal","globalStyles","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","onLogout","_useState","_useState2","_slicedToArray","isDrawerOpen","setIsDrawerOpen","_useState3","_useState4","showComplaintScreen","setShowComplaintScreen","_useState5","_useState6","showMaterialRequisitionScreen","setShowMaterialRequisitionScreen","_useState7","_useState8","showLeaveListScreen","setShowLeaveListScreen","_useState9","_useState0","showLeaveScreen","setShowLeaveScreen","_useState1","_useState10","showTravellingListScreen","setShowTravellingListScreen","_useState11","_useState12","showTravellingScreen","setShowTravellingScreen","_useState13","_useState14","showAddCustomerScreen","setShowAddCustomerScreen","_useState15","_useState16","showCreateAMCScreen","setShowCreateAMCScreen","_useState17","_useState18","showViewAttendanceScreen","setShowViewAttendanceScreen","_useState19","_useState20","showRoutineMaintenanceScreen","setShowRoutineMaintenanceScreen","_useState21","_useState22","showAMCListScreen","setShowAMCListScreen","_useState23","_useState24","showCustomersScreen","setShowCustomersScreen","_useState25","_useState26","showTipsModal","setShowTipsModal","_useState27","_useState28","showWorkCheckModal","setShowWorkCheckModal","_useState29","_useState30","workCheckNote","setWorkCheckNote","_Dimensions$get","get","width","menuItems","id","title","icon","color","handleMenuPress","item","console","log","handleMarkAttendance","handleWorkCheckIn","toggleDrawer","closeDrawer","handleNavigateToComplaint","handleBackFromComplaint","handleSaveComplaint","handleNavigateToMaterialRequisition","handleBackFromMaterialRequisition","handleSaveMaterialRequisition","handleNavigateToLeave","handleBackFromLeaveList","handleAddNewLeave","handleBackFromLeave","handleApplyLeave","handleNavigateToTravelling","handleBackFromTravellingList","handleAddNewTravelling","handleBackFromTravelling","handleApplyTravelling","handleNavigateToAddCustomer","handleBackFromAddCustomer","handleSaveCustomer","handleNavigateToCreateAMC","handleBackFromCreateAMC","handleSaveAMC","handleNavigateToViewAttendance","handleBackFromViewAttendance","handleBackFromRoutineMaintenance","handleBackFromAMCList","handleBackFromCustomers","handleShowTips","handleCloseTips","handleCloseWorkCheckModal","handleSubmitWorkCheck","onBack","onSave","onApplyLeave","onAddNew","onApplyTravelling","style","homeContainer","children","barStyle","backgroundColor","homeHeader","homeHeaderBottom","onPress","name","size","homeContent","showsVerticalScrollIndicator","homeMenuGrid","map","homeMenuCard","homeIconContainer","homeMenuTitle","homeActionButtons","homeActionButton","homeActionButtonText","homeStatusContainer","homeStatusText","visible","animationType","transparent","onRequestClose","homeModalOverlay","homeDrawerContainer","onClose","onNavigateToComplaint","onNavigateToMaterialRequisition","onNavigateToLeave","onNavigateToTravelling","onNavigateToAddCustomer","onNavigateToCreateAMC","onNavigateToViewAttendance","onShowTips","homeModalBackdrop","activeOpacity","workCheckModalOverlay","workCheckModalContainer","workCheckModalTitle","workCheckModalInput","placeholder","placeholderTextColor","value","onChangeText","multiline","textAlignVertical","workCheckModalButtons","workCheckCloseButton","workCheckCloseButtonText","workCheckSubmitButton","workCheckSubmitButtonText"],"sources":["D:/Download/Atom lift mobile app/src/screens/HomeScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  SafeAreaView,\n  TouchableOpacity,\n  ScrollView,\n  StatusBar,\n  Modal,\n  Dimensions,\n  TextInput,\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { HomeScreenProps, MenuItem } from '../../types';\nimport CustomDrawer from '../components/CustomDrawer';\nimport AddComplaintScreen from './AddComplaintScreen';\nimport MaterialRequisitionScreen from './MaterialRequisitionScreen';\nimport LeaveListScreen from './LeaveListScreen';\nimport LeaveScreen from './LeaveScreen';\nimport TravellingListScreen from './TravellingListScreen';\nimport TravellingScreen from './TravellingScreen';\nimport AddCustomerScreen from './AddCustomerScreen';\nimport CreateAMCScreen from './CreateAMCScreen';\nimport ViewAttendanceScreen from './ViewAttendanceScreen';\nimport RoutineMaintenanceScreen from './RoutineMaintenanceScreen';\nimport AMCListScreen from './AMCListScreen';\nimport CustomersScreen from './CustomersScreen';\nimport TipsModal from '../components/TipsModal';\nimport { globalStyles } from '../styles/globalStyles';\n\nconst HomeScreen: React.FC<HomeScreenProps> = ({ onLogout }) => {\n  const [isDrawerOpen, setIsDrawerOpen] = useState<boolean>(false);\n  const [showComplaintScreen, setShowComplaintScreen] = useState<boolean>(false);\n  const [showMaterialRequisitionScreen, setShowMaterialRequisitionScreen] = useState<boolean>(false);\n  const [showLeaveListScreen, setShowLeaveListScreen] = useState<boolean>(false);\n  const [showLeaveScreen, setShowLeaveScreen] = useState<boolean>(false);\n  const [showTravellingListScreen, setShowTravellingListScreen] = useState<boolean>(false);\n  const [showTravellingScreen, setShowTravellingScreen] = useState<boolean>(false);\n  const [showAddCustomerScreen, setShowAddCustomerScreen] = useState<boolean>(false);\n  const [showCreateAMCScreen, setShowCreateAMCScreen] = useState<boolean>(false);\n  const [showViewAttendanceScreen, setShowViewAttendanceScreen] = useState<boolean>(false);\n  const [showRoutineMaintenanceScreen, setShowRoutineMaintenanceScreen] = useState<boolean>(false);\n  const [showAMCListScreen, setShowAMCListScreen] = useState<boolean>(false);\n  const [showCustomersScreen, setShowCustomersScreen] = useState<boolean>(false);\n  const [showTipsModal, setShowTipsModal] = useState<boolean>(false);\n  const [showWorkCheckModal, setShowWorkCheckModal] = useState<boolean>(false);\n  const [workCheckNote, setWorkCheckNote] = useState<string>('');\n  const { width } = Dimensions.get('window');\n\n  const menuItems: MenuItem[] = [\n    {\n      id: 1,\n      title: 'Tickets',\n      icon: 'list-outline' as const,\n      color: '#3498db',\n    },\n    {\n      id: 2,\n      title: 'Routine Services',\n      icon: 'settings-outline' as const,\n      color: '#3498db',\n    },\n    {\n      id: 3,\n      title: 'Customers',\n      icon: 'people-outline' as const,\n      color: '#3498db',\n    },\n    {\n      id: 4,\n      title: 'AMC',\n      icon: 'calendar-outline' as const,\n      color: '#9b59b6',\n    },\n  ];\n\n  const handleMenuPress = (item: MenuItem): void => {\n    console.log(`Pressed: ${item.title}`);\n    if (item.title === 'Routine Services') {\n      setShowRoutineMaintenanceScreen(true);\n    } else if (item.title === 'AMC') {\n      setShowAMCListScreen(true);\n    } else if (item.title === 'Customers') {\n      setShowCustomersScreen(true);\n    }\n    // Add navigation logic for other menu items here\n  };\n\n  const handleMarkAttendance = (): void => {\n    console.log('Mark Attendance In pressed');\n    // Add attendance logic here\n  };\n\n  const handleWorkCheckIn = (): void => {\n    console.log('Work Check In pressed');\n    setShowWorkCheckModal(true);\n  };\n\n  const toggleDrawer = (): void => {\n    setIsDrawerOpen(!isDrawerOpen);\n  };\n\n  const closeDrawer = (): void => {\n    setIsDrawerOpen(false);\n  };\n\n  const handleNavigateToComplaint = (): void => {\n    setShowComplaintScreen(true);\n  };\n\n  const handleBackFromComplaint = (): void => {\n    setShowComplaintScreen(false);\n  };\n\n  const handleSaveComplaint = (): void => {\n    console.log('Complaint saved successfully');\n    setShowComplaintScreen(false);\n  };\n\n  const handleNavigateToMaterialRequisition = (): void => {\n    setShowMaterialRequisitionScreen(true);\n  };\n\n  const handleBackFromMaterialRequisition = (): void => {\n    setShowMaterialRequisitionScreen(false);\n  };\n\n  const handleSaveMaterialRequisition = (): void => {\n    console.log('Material requisition saved successfully');\n    setShowMaterialRequisitionScreen(false);\n  };\n\n  const handleNavigateToLeave = (): void => {\n    setShowLeaveListScreen(true);\n  };\n\n  const handleBackFromLeaveList = (): void => {\n    setShowLeaveListScreen(false);\n  };\n\n  const handleAddNewLeave = (): void => {\n    console.log('handleAddNewLeave called - setting showLeaveScreen to true');\n    setShowLeaveScreen(true);\n  };\n\n  const handleBackFromLeave = (): void => {\n    console.log('handleBackFromLeave called - going back to leave list');\n    setShowLeaveScreen(false);\n    // Don't set showLeaveListScreen to false, keep it true to show the list\n  };\n\n  const handleApplyLeave = (): void => {\n    console.log('Leave applied successfully');\n    setShowLeaveScreen(false);\n    setShowLeaveListScreen(false); // Go back to home after applying\n  };\n\n  const handleNavigateToTravelling = (): void => {\n    setShowTravellingListScreen(true);\n  };\n\n  const handleBackFromTravellingList = (): void => {\n    setShowTravellingListScreen(false);\n  };\n\n  const handleAddNewTravelling = (): void => {\n    console.log('handleAddNewTravelling called - setting showTravellingScreen to true');\n    setShowTravellingScreen(true);\n  };\n\n  const handleBackFromTravelling = (): void => {\n    console.log('handleBackFromTravelling called - going back to travelling list');\n    setShowTravellingScreen(false);\n  };\n\n  const handleApplyTravelling = (): void => {\n    console.log('Travelling applied successfully');\n    setShowTravellingScreen(false);\n    setShowTravellingListScreen(false); // Go back to home after applying\n  };\n\n  const handleNavigateToAddCustomer = (): void => {\n    setShowAddCustomerScreen(true);\n  };\n\n  const handleBackFromAddCustomer = (): void => {\n    setShowAddCustomerScreen(false);\n  };\n\n  const handleSaveCustomer = (): void => {\n    console.log('Customer saved successfully');\n    setShowAddCustomerScreen(false);\n  };\n\n  const handleNavigateToCreateAMC = (): void => {\n    setShowCreateAMCScreen(true);\n  };\n\n  const handleBackFromCreateAMC = (): void => {\n    setShowCreateAMCScreen(false);\n  };\n\n  const handleSaveAMC = (): void => {\n    console.log('AMC created successfully');\n    setShowCreateAMCScreen(false);\n  };\n\n  const handleNavigateToViewAttendance = (): void => {\n    setShowViewAttendanceScreen(true);\n  };\n\n  const handleBackFromViewAttendance = (): void => {\n    setShowViewAttendanceScreen(false);\n  };\n\n  const handleBackFromRoutineMaintenance = (): void => {\n    setShowRoutineMaintenanceScreen(false);\n  };\n\n  const handleBackFromAMCList = (): void => {\n    setShowAMCListScreen(false);\n  };\n\n  const handleBackFromCustomers = (): void => {\n    setShowCustomersScreen(false);\n  };\n\n  const handleShowTips = (): void => {\n    setShowTipsModal(true);\n  };\n\n  const handleCloseTips = (): void => {\n    setShowTipsModal(false);\n  };\n\n  const handleCloseWorkCheckModal = (): void => {\n    setShowWorkCheckModal(false);\n    setWorkCheckNote('');\n  };\n\n  const handleSubmitWorkCheck = (): void => {\n    console.log('Work Check submitted with note:', workCheckNote);\n    // Add work check submission logic here\n    setShowWorkCheckModal(false);\n    setWorkCheckNote('');\n  };\n\n  // Show complaint screen if needed\n  if (showComplaintScreen) {\n    return (\n      <AddComplaintScreen\n        onBack={handleBackFromComplaint}\n        onSave={handleSaveComplaint}\n      />\n    );\n  }\n\n  // Show material requisition screen if needed\n  if (showMaterialRequisitionScreen) {\n    return (\n      <MaterialRequisitionScreen\n        onBack={handleBackFromMaterialRequisition}\n        onSave={handleSaveMaterialRequisition}\n      />\n    );\n  }\n\n  // Show leave form screen if needed (check this first)\n  if (showLeaveScreen) {\n    console.log('Rendering LeaveScreen');\n    return (\n      <LeaveScreen\n        onBack={handleBackFromLeave}\n        onApplyLeave={handleApplyLeave}\n      />\n    );\n  }\n\n  // Show leave list screen if needed\n  if (showLeaveListScreen) {\n    return (\n      <LeaveListScreen\n        onBack={handleBackFromLeaveList}\n        onAddNew={handleAddNewLeave}\n      />\n    );\n  }\n\n  // Show travelling form screen if needed (check this first)\n  if (showTravellingScreen) {\n    console.log('Rendering TravellingScreen');\n    return (\n      <TravellingScreen\n        onBack={handleBackFromTravelling}\n        onApplyTravelling={handleApplyTravelling}\n      />\n    );\n  }\n\n  // Show travelling list screen if needed\n  if (showTravellingListScreen) {\n    return (\n      <TravellingListScreen\n        onBack={handleBackFromTravellingList}\n        onAddNew={handleAddNewTravelling}\n      />\n    );\n  }\n\n  // Show add customer screen if needed\n  if (showAddCustomerScreen) {\n    return (\n      <AddCustomerScreen\n        onBack={handleBackFromAddCustomer}\n        onSave={handleSaveCustomer}\n      />\n    );\n  }\n\n  // Show create AMC screen if needed\n  if (showCreateAMCScreen) {\n    return (\n      <CreateAMCScreen\n        onBack={handleBackFromCreateAMC}\n        onSave={handleSaveAMC}\n      />\n    );\n  }\n\n  // Show view attendance screen if needed\n  if (showViewAttendanceScreen) {\n    return (\n      <ViewAttendanceScreen\n        onBack={handleBackFromViewAttendance}\n      />\n    );\n  }\n\n  // Show routine maintenance screen if needed\n  if (showRoutineMaintenanceScreen) {\n    return (\n      <RoutineMaintenanceScreen\n        onBack={handleBackFromRoutineMaintenance}\n      />\n    );\n  }\n\n  // Show AMC list screen if needed\n  if (showAMCListScreen) {\n    return (\n      <AMCListScreen\n        onBack={handleBackFromAMCList}\n      />\n    );\n  }\n\n  return (\n    <SafeAreaView style={globalStyles.homeContainer}>\n      <StatusBar barStyle=\"light-content\" backgroundColor=\"#3498db\" />\n      \n      {/* Header */}\n      <View style={globalStyles.homeHeader}>\n        <View style={globalStyles.homeHeaderBottom}>\n          <TouchableOpacity onPress={toggleDrawer}>\n          <Ionicons name=\"menu\" size={24} color=\"#fff\" />\n          </TouchableOpacity>\n        </View>\n      </View>\n\n      <ScrollView style={globalStyles.homeContent} showsVerticalScrollIndicator={false}>\n        {/* Menu Cards Grid */}\n        <View style={globalStyles.homeMenuGrid}>\n          {menuItems.map((item) => (\n            <TouchableOpacity\n              key={item.id}\n              style={globalStyles.homeMenuCard}\n              onPress={() => handleMenuPress(item)}\n            >\n              <View style={[globalStyles.homeIconContainer, { backgroundColor: item.color }]}>\n                <Ionicons name={item.icon} size={32} color=\"#fff\" />\n              </View>\n              <Text style={globalStyles.homeMenuTitle}>{item.title}</Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n\n        {/* Action Buttons */}\n        <View style={globalStyles.homeActionButtons}>\n          <TouchableOpacity style={globalStyles.homeActionButton} onPress={handleMarkAttendance}>\n            <Text style={globalStyles.homeActionButtonText}>Mark Attendance In</Text>\n          </TouchableOpacity>\n          \n          <TouchableOpacity style={globalStyles.homeActionButton} onPress={handleWorkCheckIn}>\n            <Text style={globalStyles.homeActionButtonText}>Work Check In</Text>\n          </TouchableOpacity>\n        </View>\n\n        {/* Status Text */}\n        <View style={globalStyles.homeStatusContainer}>\n          <Text style={globalStyles.homeStatusText}>Last Check In: null || null ||</Text>\n          <Ionicons name=\"location-outline\" size={16} color=\"#3498db\" />\n        </View>\n      </ScrollView>\n\n      {/* Drawer Modal */}\n      <Modal\n        visible={isDrawerOpen}\n        animationType=\"slide\"\n        transparent={true}\n        onRequestClose={closeDrawer}\n      >\n        <View style={globalStyles.homeModalOverlay}>\n          <View style={[globalStyles.homeDrawerContainer, { width: width * 0.85 }]}>\n        <CustomDrawer\n          onClose={closeDrawer}\n          onLogout={onLogout}\n          onNavigateToComplaint={handleNavigateToComplaint}\n          onNavigateToMaterialRequisition={handleNavigateToMaterialRequisition}\n          onNavigateToLeave={handleNavigateToLeave}\n          onNavigateToTravelling={handleNavigateToTravelling}\n          onNavigateToAddCustomer={handleNavigateToAddCustomer}\n          onNavigateToCreateAMC={handleNavigateToCreateAMC}\n          onNavigateToViewAttendance={handleNavigateToViewAttendance}\n          onShowTips={handleShowTips}\n        />\n          </View>\n          <TouchableOpacity\n            style={globalStyles.homeModalBackdrop}\n            activeOpacity={1}\n            onPress={closeDrawer}\n          />\n        </View>\n      </Modal>\n\n      {/* Tips Modal */}\n      <TipsModal\n        visible={showTipsModal}\n        onClose={handleCloseTips}\n      />\n\n      {/* Work Check Modal */}\n      <Modal\n        visible={showWorkCheckModal}\n        animationType=\"fade\"\n        transparent={true}\n        onRequestClose={handleCloseWorkCheckModal}\n      >\n        <View style={globalStyles.workCheckModalOverlay}>\n          <View style={globalStyles.workCheckModalContainer}>\n            <Text style={globalStyles.workCheckModalTitle}>Note</Text>\n            \n            <TextInput\n              style={globalStyles.workCheckModalInput}\n              placeholder=\"type note here...\"\n              placeholderTextColor=\"#999\"\n              value={workCheckNote}\n              onChangeText={setWorkCheckNote}\n              multiline={true}\n              textAlignVertical=\"top\"\n            />\n            \n            <View style={globalStyles.workCheckModalButtons}>\n              <TouchableOpacity\n                style={globalStyles.workCheckCloseButton}\n                onPress={handleCloseWorkCheckModal}\n              >\n                <Text style={globalStyles.workCheckCloseButtonText}>CLOSE</Text>\n              </TouchableOpacity>\n              \n              <TouchableOpacity\n                style={globalStyles.workCheckSubmitButton}\n                onPress={handleSubmitWorkCheck}\n              >\n                <Text style={globalStyles.workCheckSubmitButtonText}>WORK CHECK</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </SafeAreaView>\n  );\n};\n\nexport default HomeScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}